{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Activants46\\\\Desktop\\\\added\\\\KhazanahMobileApp\\\\app\\\\screen\\\\LoginScreen.js\",\n    _this2 = this;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { baseURLAPI, baseURL } from \"../../Global\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { div } from \"react-native-web/dist/index\";\nimport { Icon } from \"react-native-web/dist/index\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport useColorScheme from \"react-native-web/dist/exports/useColorScheme\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport * as Google from \"expo-google-app-auth\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\n\nvar axios = require(\"axios\");\n\nimport Constants from \"expo-constants\";\nimport styles from \"../styles/styles\";\nimport Homepage from \"./Homepage\";\n\nvar LoginScreen = function (_React$Component) {\n  _inherits(LoginScreen, _React$Component);\n\n  var _super = _createSuper(LoginScreen);\n\n  function LoginScreen(props) {\n    var _this;\n\n    _classCallCheck(this, LoginScreen);\n\n    _this = _super.call(this, props);\n\n    _this.signUpUser = function _callee(email, name, password, phone, image) {\n      var body;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              Keyboard.dismiss();\n\n              if (email && name && password && phone && image) {\n                body = {\n                  TX_USER_NAME: name,\n                  TX_USER_EMAIL: email,\n                  TX_USER_PASSWORD: password,\n                  TX_USER_PHONE: phone,\n                  TX_USER_PICTURE: image\n                };\n                console.log(baseURLAPI);\n                axios.post(baseURLAPI + \"/auth/register\", body).then(function (response) {\n                  if (response.data.jwtToken) {\n                    AsyncStorage.setItem(\"jwtToken\", response.data.jwtToken);\n\n                    _this.setState({\n                      signedIn: true,\n                      name: response.data.jwtToken,\n                      photoUrl: \"result.user.photoUrl\"\n                    });\n                  }\n                }).catch(function (error) {\n                  console.log(error);\n\n                  _this.setState({\n                    errorList: \"Incorrect details or password\"\n                  });\n                });\n              } else {\n                _this.setState({\n                  errorList: \"Incorrect details or password\"\n                });\n              }\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.signInUser = function _callee2(email, password) {\n      var body;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              Keyboard.dismiss();\n              body = {\n                TX_USER_NAME: email,\n                TX_USER_EMAIL: email,\n                TX_USER_PASSWORD: password\n              };\n              console.log(baseURLAPI);\n              axios.post(baseURLAPI + \"/auth/login\", body).then(function (response) {\n                if (response.data.jwtToken) {\n                  AsyncStorage.setItem(\"jwtToken\", response.data.jwtToken);\n\n                  _this.setState({\n                    signedIn: true,\n                    name: response.data.jwtToken,\n                    photoUrl: \"result.user.photoUrl\"\n                  });\n                }\n              }).catch(function (error) {\n                _this.setState({\n                  errorList: \"Incorrect email or password\"\n                });\n              });\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.signIn = function _callee3() {\n      var result, user, body;\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return _regeneratorRuntime.awrap(Google.logInAsync({\n                androidClientId: \"770480272379-786um8vmqi9p35ingldm4celsrk2jshi.apps.googleusercontent.com\",\n                iosClientId: \"770480272379-rlr3mcpthnr02t3rul9ls1u5p4k2bsm6.apps.googleusercontent.com\",\n                scopes: [\"profile\", \"email\"]\n              }));\n\n            case 3:\n              result = _context3.sent;\n\n              if (result.type === \"success\") {\n                console.log(result.user);\n                user = result.user;\n                body = {\n                  TX_USER_NAME: user.name,\n                  TX_USER_EMAIL: user.email,\n                  TX_GOOGLE_ID: user.id,\n                  TX_USER_PICTURE: user.photoUrl\n                };\n                console.log(baseURLAPI);\n                axios.post(baseURLAPI + \"/auth/socialauth\", body).then(function (response) {\n                  if (response.data.jwtToken) {\n                    AsyncStorage.setItem(\"jwtToken\", response.data.jwtToken);\n\n                    _this.setState({\n                      signedIn: true,\n                      name: response.data.jwtToken,\n                      photoUrl: \"result.user.photoUrl\"\n                    });\n                  }\n                }).catch(function (error) {\n                  _this.setState({\n                    errorList: \"Incorrect email or password\"\n                  });\n                });\n              }\n\n              _context3.next = 10;\n              break;\n\n            case 7:\n              _context3.prev = 7;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.log(\"error\", _context3.t0);\n\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 7]], Promise);\n    };\n\n    _this.state = {\n      signedIn: false,\n      name: \"\",\n      photoUrl: \"\",\n      errorList: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 7\n        }\n      }, this.state.signedIn ? React.createElement(LoggedInPage, {\n        name: this.state.name,\n        photoUrl: this.state.photoUrl,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }\n      }) : React.createElement(LoginPage, {\n        signIn: this.signIn,\n        signUpUser: this.signUpUser,\n        signInUser: this.signInUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }\n      }));\n    }\n  }]);\n\n  return LoginScreen;\n}(React.Component);\n\nexport { LoginScreen as default };\n\nvar LoginPage = function LoginPage(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      signupView = _useState2[0],\n      setsignupView = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setemailCredencials = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setpasswordCredencials = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      name = _useState8[0],\n      setnameCredencials = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      phone = _useState10[0],\n      setphoneCredencials = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      url = _useState12[0],\n      seturlCredencials = _useState12[1];\n\n  var _useState13 = useState(null),\n      _useState14 = _slicedToArray(_useState13, 2),\n      image = _useState14[0],\n      setImage = _useState14[1];\n\n  useEffect(function () {\n    (function _callee4() {\n      var _await$ImagePicker$re, status;\n\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              if (!(Platform.OS !== \"web\")) {\n                _context4.next = 6;\n                break;\n              }\n\n              _context4.next = 3;\n              return _regeneratorRuntime.awrap(ImagePicker.requestMediaLibraryPermissionsAsync());\n\n            case 3:\n              _await$ImagePicker$re = _context4.sent;\n              status = _await$ImagePicker$re.status;\n\n              if (status !== \"granted\") {\n                alert(\"Sorry, we need camera roll permissions to make this work!\");\n              }\n\n            case 6:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  var pickImage = function pickImage() {\n    var result;\n    return _regeneratorRuntime.async(function pickImage$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.Images,\n              allowsEditing: true,\n              base64: true,\n              aspect: [4, 4],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context5.sent;\n            console.log(result);\n            console.log(\"image asset\", result);\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n            }\n\n          case 6:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var viewSignUp = function viewSignUp() {\n    setsignupView(!signupView);\n  };\n\n  return React.createElement(View, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 5\n    }\n  }, signupView ? React.createElement(View, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.header,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 11\n    }\n  }, \"Register\"), React.createElement(TouchableOpacity, {\n    style: {\n      alignContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 11\n    }\n  }, image ? React.createElement(TouchableOpacity, {\n    style: {\n      alignContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 15\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: image\n    },\n    style: {\n      width: 100,\n      height: 100,\n      borderRadius: 50\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    onPress: pickImage,\n    style: {\n      color: \"#002f6c\"\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 17\n    }\n  }, \"Change Image\")) : React.createElement(TouchableOpacity, {\n    onPress: pickImage,\n    style: {\n      borderColor: \"#27AE62\",\n      backgroundColor: \"#27AE62\",\n      alignContent: \"center\",\n      alignItems: \"center\",\n      backgroundColor: \"#27AE62\",\n      width: 100,\n      height: 100,\n      borderRadius: 50\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: {\n      paddingTop: 30,\n      paddingLeft: 10,\n      color: \"#fff\"\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 17\n    }\n  }, \"Add a profile picture\"))), React.createElement(TextInput, {\n    style: styles.TextInput,\n    onChangeText: function onChangeText(name) {\n      return setnameCredencials(name);\n    },\n    underlineColorAndroid: \"rgba(0,0,0,0)\",\n    placeholder: \"Name\",\n    placeholderTextColor: \"#002f6c\",\n    selectionColor: \"#fff\",\n    keyboardType: \"default\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 11\n    }\n  }), React.createElement(TextInput, {\n    style: styles.TextInput,\n    onChangeText: function onChangeText(email) {\n      return setemailCredencials(email);\n    },\n    underlineColorAndroid: \"rgba(0,0,0,0)\",\n    placeholder: \"Email\",\n    placeholderTextColor: \"#002f6c\",\n    selectionColor: \"#fff\",\n    keyboardType: \"email-address\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 11\n    }\n  }), React.createElement(TextInput, {\n    style: styles.TextInput,\n    onChangeText: function onChangeText(phone) {\n      return setphoneCredencials(phone);\n    },\n    underlineColorAndroid: \"rgba(0,0,0,0)\",\n    placeholder: \"Phone\",\n    placeholderTextColor: \"#002f6c\",\n    selectionColor: \"#fff\",\n    keyboardType: \"numeric\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 11\n    }\n  }), React.createElement(TextInput, {\n    style: styles.TextInput,\n    onChangeText: function onChangeText(password) {\n      return setpasswordCredencials(password);\n    },\n    underlineColorAndroid: \"rgba(0,0,0,0)\",\n    placeholder: \"Password\",\n    placeholderTextColor: \"#002f6c\",\n    selectionColor: \"#fff\",\n    secureTextEntry: true,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 11\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return props.signUpUser(email, name, password, phone, image);\n    },\n    style: styles.UserButton,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#fff\"\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 13\n    }\n  }, \"Register\")), props.errorList.le && React.createElement(TouchableOpacity, {\n    style: styles.UserButton,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 37\n    }\n  }, React.createElement(Text, {\n    style: {\n      borderColor: \"#DC143C\",\n      backgroundColor: \"#DC143C\",\n      width: 250,\n      borderWidth: 2,\n      marginTop: 25,\n      alignContent: \"center\",\n      borderRadius: 23,\n      paddingVertical: 7,\n      alignItems: \"center\"\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 13\n    }\n  }, \"Registeddr\")), React.createElement(TouchableOpacity, {\n    onPress: viewSignUp,\n    style: styles.text,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#002f6c\"\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 13\n    }\n  }, \"Sign-In\"))) : React.createElement(View, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.header,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 11\n    }\n  }, \"Login\"), React.createElement(TextInput, {\n    style: styles.TextInput,\n    onChangeText: function onChangeText(email) {\n      return setemailCredencials(email);\n    },\n    underlineColorAndroid: \"rgba(0,0,0,0)\",\n    placeholder: \"Email\",\n    placeholderTextColor: \"#002f6c\",\n    selectionColor: \"#fff\",\n    keyboardType: \"email-address\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 11\n    }\n  }), React.createElement(TextInput, {\n    style: styles.TextInput,\n    onChangeText: function onChangeText(password) {\n      return setpasswordCredencials(password);\n    },\n    underlineColorAndroid: \"rgba(0,0,0,0)\",\n    placeholder: \"Password\",\n    placeholderTextColor: \"#002f6c\",\n    selectionColor: \"#fff\",\n    secureTextEntry: true,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 11\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return props.signInUser(email, password);\n    },\n    style: styles.UserButton,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#fff\"\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 13\n    }\n  }, \"Login\")), React.createElement(TouchableOpacity, {\n    onPress: viewSignUp,\n    style: styles.text,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#000000\"\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 13\n    }\n  }, \"Not a user? Sign Up\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return props.signIn();\n    },\n    style: styles.googleButton,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#fff\"\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 13\n    }\n  }, \"Sign in with Google\"))));\n};\n\nvar LoggedInPage = function LoggedInPage(props) {\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 5\n    }\n  }, React.createElement(Homepage, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 7\n    }\n  }));\n};","map":{"version":3,"sources":["C:/Users/Activants46/Desktop/added/KhazanahMobileApp/app/screen/LoginScreen.js"],"names":["React","useState","useEffect","useContext","baseURLAPI","baseURL","div","Icon","ImagePicker","Google","AsyncStorage","axios","require","Constants","styles","Homepage","LoginScreen","props","signUpUser","email","name","password","phone","image","Keyboard","dismiss","body","TX_USER_NAME","TX_USER_EMAIL","TX_USER_PASSWORD","TX_USER_PHONE","TX_USER_PICTURE","console","log","post","then","response","data","jwtToken","setItem","setState","signedIn","photoUrl","catch","error","errorList","signInUser","signIn","logInAsync","androidClientId","iosClientId","scopes","result","type","user","TX_GOOGLE_ID","id","state","container","Component","LoginPage","signupView","setsignupView","setemailCredencials","setpasswordCredencials","setnameCredencials","setphoneCredencials","url","seturlCredencials","setImage","Platform","OS","requestMediaLibraryPermissionsAsync","status","alert","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","base64","aspect","quality","cancelled","uri","viewSignUp","header","alignContent","alignItems","width","height","borderRadius","color","borderColor","backgroundColor","paddingTop","paddingLeft","TextInput","UserButton","le","borderWidth","marginTop","paddingVertical","text","googleButton","LoggedInPage"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { baseURLAPI, baseURL } from \"../../Global\";\r\nimport {\r\n  Keyboard,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Image,\r\n  Platform,\r\n  Button,\r\n  div,\r\n  Icon,\r\n  TextInput,\r\n  useColorScheme,\r\n} from \"react-native\";import * as ImagePicker from \"expo-image-picker\";\r\nimport * as Google from \"expo-google-app-auth\";\r\nimport AsyncStorage from \"@react-native-community/async-storage\";\r\nconst axios = require(\"axios\");\r\nimport Constants from \"expo-constants\"; \r\nimport  styles from \"../styles/styles\" ;\r\nimport Homepage from \"./Homepage\";\r\n\r\nexport default class LoginScreen extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      signedIn: false,\r\n      name: \"\",\r\n      photoUrl: \"\",\r\n      errorList:\"\"\r\n    };\r\n  }\r\n  signUpUser = async (email, name, password, phone, image) => {\r\n    Keyboard.dismiss();\r\nif (email && name && password && phone&& image)\r\n{     const body = {\r\n      TX_USER_NAME: name,\r\n      TX_USER_EMAIL: email,\r\n      TX_USER_PASSWORD: password,\r\n      TX_USER_PHONE: phone,\r\n      TX_USER_PICTURE: image,\r\n    };\r\n    console.log(baseURLAPI);\r\n\r\n    axios\r\n      .post(baseURLAPI + \"/auth/register\", body)\r\n      .then((response) => {\r\n        if (response.data.jwtToken) {\r\n          AsyncStorage.setItem(\"jwtToken\", response.data.jwtToken);\r\n\r\n          this.setState({\r\n            signedIn: true,\r\n            name: response.data.jwtToken,\r\n            photoUrl: \"result.user.photoUrl\",\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        this.setState({\r\n          errorList: \"Incorrect details or password\", \r\n        }); \r\n      }); }else {this.setState({\r\n        errorList: \"Incorrect details or password\", \r\n      }); }\r\n\r\n  };\r\n  signInUser = async (email, password) => {\r\n    Keyboard.dismiss();\r\n\r\n    const body = {\r\n      TX_USER_NAME: email,\r\n      TX_USER_EMAIL: email,\r\n      TX_USER_PASSWORD: password,\r\n    };\r\n    console.log(baseURLAPI);\r\n    axios\r\n      .post(baseURLAPI + \"/auth/login\", body)\r\n      .then((response) => {\r\n        if (response.data.jwtToken) {\r\n          AsyncStorage.setItem(\"jwtToken\", response.data.jwtToken);\r\n\r\n          this.setState({\r\n            signedIn: true,\r\n            name: response.data.jwtToken,\r\n            photoUrl: \"result.user.photoUrl\",\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          errorList: \"Incorrect email or password\", \r\n        }); \r\n      });\r\n  };\r\n\r\n  signIn = async () => {\r\n    try {\r\n      const result = await Google.logInAsync({\r\n        androidClientId:\r\n          \"770480272379-786um8vmqi9p35ingldm4celsrk2jshi.apps.googleusercontent.com\",\r\n        iosClientId:\r\n          \"770480272379-rlr3mcpthnr02t3rul9ls1u5p4k2bsm6.apps.googleusercontent.com\",\r\n        scopes: [\"profile\", \"email\"],\r\n      });\r\n\r\n      if (result.type === \"success\") {\r\n        console.log(result.user);\r\n        var user = result.user;\r\n\r\n        const body = {\r\n          TX_USER_NAME: user.name,\r\n          TX_USER_EMAIL: user.email,\r\n          TX_GOOGLE_ID: user.id,\r\n          TX_USER_PICTURE: user.photoUrl,\r\n        };\r\n        console.log(baseURLAPI);\r\n        axios\r\n          .post(baseURLAPI + \"/auth/socialauth\", body)\r\n          .then((response) => {\r\n            if (response.data.jwtToken) {\r\n              AsyncStorage.setItem(\"jwtToken\", response.data.jwtToken);\r\n\r\n              this.setState({\r\n                signedIn: true,\r\n                name: response.data.jwtToken,\r\n                photoUrl: \"result.user.photoUrl\",\r\n              });\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            this.setState({\r\n              errorList: \"Incorrect email or password\", \r\n            }); \r\n          });\r\n      }\r\n    } catch (e) {\r\n      console.log(\"error\", e);\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <View style={styles.container}>\r\n        {this.state.signedIn ? (\r\n          <LoggedInPage name={this.state.name} photoUrl={this.state.photoUrl} />\r\n        ) : (\r\n          <LoginPage\r\n            signIn={this.signIn}\r\n            signUpUser={this.signUpUser}\r\n            signInUser={this.signInUser}\r\n          />\r\n        )}\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst LoginPage = (props) => {\r\n  const [signupView, setsignupView] = useState(false);\r\n  const [email, setemailCredencials] = useState(\"\");\r\n  const [password, setpasswordCredencials] = useState(\"\");\r\n\r\n  const [name, setnameCredencials] = useState(\"\");\r\n  const [phone, setphoneCredencials] = useState(\"\");\r\n\r\n  const [url, seturlCredencials] = useState(\"\");\r\n  const [image, setImage] = useState(null);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (Platform.OS !== \"web\") {\r\n        const {\r\n          status,\r\n        } = await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n        if (status !== \"granted\") {\r\n          alert(\"Sorry, we need camera roll permissions to make this work!\");\r\n        }\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  const pickImage = async () => {\r\n    let result = await ImagePicker.launchImageLibraryAsync({\r\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n      allowsEditing: true,\r\n      base64: true,\r\n      aspect: [4, 4],\r\n      quality: 1,\r\n    });\r\n\r\n    console.log(result);\r\n    console.log(\"image asset\", result);\r\n    if (!result.cancelled) {\r\n      setImage(result.uri);\r\n    }\r\n  };\r\n\r\n  const viewSignUp = () => {\r\n    setsignupView(!signupView);\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      {signupView ? (\r\n        <View>\r\n          <Text style={styles.header}>Register</Text>\r\n\r\n          <TouchableOpacity\r\n            style={{\r\n              alignContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            {image ? (\r\n              <TouchableOpacity\r\n                style={{\r\n                  alignContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                <Image\r\n                  source={{ uri: image }}\r\n                  style={{ width: 100, height: 100, borderRadius: 50 }}\r\n                />\r\n                <Text\r\n                  onPress={pickImage}\r\n                  style={{\r\n                    color: \"#002f6c\",\r\n                  }}\r\n                >\r\n                  Change Image\r\n                </Text>\r\n              </TouchableOpacity>\r\n            ) : (\r\n              <TouchableOpacity\r\n                onPress={pickImage}\r\n                style={{\r\n                  borderColor: \"#27AE62\",\r\n                  backgroundColor: \"#27AE62\",\r\n                  alignContent: \"center\",\r\n                  alignItems: \"center\",\r\n\r\n                  backgroundColor: \"#27AE62\",\r\n                  width: 100,\r\n                  height: 100,\r\n                  borderRadius: 50,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    paddingTop: 30,\r\n                    paddingLeft: 10,\r\n                    color: \"#fff\",\r\n                  }}\r\n                >\r\n                  Add a profile picture\r\n                </Text>\r\n              </TouchableOpacity>\r\n            )}\r\n          </TouchableOpacity>\r\n          <TextInput\r\n            style={styles.TextInput}\r\n            onChangeText={(name) => setnameCredencials(name)}\r\n            underlineColorAndroid=\"rgba(0,0,0,0)\"\r\n            placeholder=\"Name\"\r\n            placeholderTextColor=\"#002f6c\"\r\n            selectionColor=\"#fff\"\r\n            keyboardType=\"default\"\r\n          />\r\n\r\n          <TextInput\r\n            style={styles.TextInput}\r\n            onChangeText={(email) => setemailCredencials(email)}\r\n            underlineColorAndroid=\"rgba(0,0,0,0)\"\r\n            placeholder=\"Email\"\r\n            placeholderTextColor=\"#002f6c\"\r\n            selectionColor=\"#fff\"\r\n            keyboardType=\"email-address\"\r\n          />\r\n\r\n          <TextInput\r\n            style={styles.TextInput}\r\n            onChangeText={(phone) => setphoneCredencials(phone)}\r\n            underlineColorAndroid=\"rgba(0,0,0,0)\"\r\n            placeholder=\"Phone\"\r\n            placeholderTextColor=\"#002f6c\"\r\n            selectionColor=\"#fff\"\r\n            keyboardType=\"numeric\"\r\n          />\r\n\r\n          <TextInput\r\n            style={styles.TextInput}\r\n            onChangeText={(password) => setpasswordCredencials(password)}\r\n            underlineColorAndroid=\"rgba(0,0,0,0)\"\r\n            placeholder=\"Password\"\r\n            placeholderTextColor=\"#002f6c\"\r\n            selectionColor=\"#fff\"\r\n            secureTextEntry={true}\r\n          />\r\n\r\n          <TouchableOpacity\r\n            onPress={() => props.signUpUser(email, name, password, phone, image)}\r\n            style={styles.UserButton}\r\n          >\r\n            <Text\r\n              style={{\r\n                color: \"#fff\",\r\n              }}\r\n            >\r\n              Register\r\n            </Text>\r\n          </TouchableOpacity>\r\n          {props.errorList.le && (  <TouchableOpacity\r\n           \r\n            style={styles.UserButton}\r\n          >\r\n            <Text\r\n              style={{\r\n                borderColor: \"#DC143C\",\r\n                backgroundColor: \"#DC143C\",\r\n                width: 250,\r\n                borderWidth: 2,\r\n                marginTop: 25,\r\n                alignContent: \"center\",\r\n                borderRadius: 23,\r\n                paddingVertical: 7,\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              Registeddr\r\n            </Text>\r\n          </TouchableOpacity>)}\r\n         \r\n          <TouchableOpacity onPress={viewSignUp} style={styles.text}>\r\n            <Text style={{ color: \"#002f6c\" }}>Sign-In</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      ) : (\r\n        <View>\r\n          <Text style={styles.header}>Login</Text>\r\n\r\n          <TextInput\r\n            style={styles.TextInput}\r\n            onChangeText={(email) => setemailCredencials(email)}\r\n            underlineColorAndroid=\"rgba(0,0,0,0)\"\r\n            placeholder=\"Email\"\r\n            placeholderTextColor=\"#002f6c\"\r\n            selectionColor=\"#fff\"\r\n            keyboardType=\"email-address\"\r\n          />\r\n\r\n          <TextInput\r\n            style={styles.TextInput}\r\n            onChangeText={(password) => setpasswordCredencials(password)}\r\n            underlineColorAndroid=\"rgba(0,0,0,0)\"\r\n            placeholder=\"Password\"\r\n            placeholderTextColor=\"#002f6c\"\r\n            selectionColor=\"#fff\"\r\n            secureTextEntry={true}\r\n          />\r\n          <TouchableOpacity\r\n            onPress={() => props.signInUser(email, password)}\r\n            style={styles.UserButton}\r\n          >\r\n            <Text style={{ color: \"#fff\" }}>Login</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity onPress={viewSignUp} style={styles.text}>\r\n            <Text\r\n              style={{\r\n                color: \"#000000\",\r\n              }}\r\n            >\r\n              Not a user? Sign Up\r\n            </Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            onPress={() => props.signIn()}\r\n            style={styles.googleButton}\r\n          >\r\n            <Text style={{ color: \"#fff\" }}>Sign in with Google</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst LoggedInPage = (props) => {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Homepage />\r\n\r\n      {/* <Text style={styles.header}>Welcome:{props.name}</Text>\r\n      <Image style={styles.image} source={{ uri: props.photoUrl }} /> */}\r\n    </View>\r\n  );\r\n};\r\n  "]},"metadata":{},"sourceType":"module"}