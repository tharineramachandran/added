{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Activants46\\\\Desktop\\\\added\\\\app\\\\screen\\\\LoginScreen.js\",\n    _this2 = this;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { div } from \"react-native-web/dist/index\";\nimport { Icon } from \"react-native-web/dist/index\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport * as Google from 'expo-google-app-auth';\n\nvar LoginScreen = function (_React$Component) {\n  _inherits(LoginScreen, _React$Component);\n\n  var _super = _createSuper(LoginScreen);\n\n  function LoginScreen(props) {\n    var _this;\n\n    _classCallCheck(this, LoginScreen);\n\n    _this = _super.call(this, props);\n\n    _this.signIn = function _callee() {\n      var result;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(Google.logInAsync({\n                androidClientId: \"770480272379-786um8vmqi9p35ingldm4celsrk2jshi.apps.googleusercontent.com\",\n                iosClientId: \"770480272379-rlr3mcpthnr02t3rul9ls1u5p4k2bsm6.apps.googleusercontent.com\",\n                scopes: [\"profile\", \"email\"]\n              }));\n\n            case 3:\n              result = _context.sent;\n\n              if (result.type === \"success\") {\n                _this.setState({\n                  signedIn: true,\n                  name: result.user.name,\n                  photoUrl: result.user.photoUrl\n                });\n              } else {\n                console.log(\"cancelled\");\n              }\n\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(\"error\", _context.t0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 7]], Promise);\n    };\n\n    _this.state = {\n      signedIn: false,\n      name: \"\",\n      photoUrl: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 7\n        }\n      }, this.state.signedIn ? React.createElement(LoggedInPage, {\n        name: this.state.name,\n        photoUrl: this.state.photoUrl,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }\n      }) : React.createElement(LoginPage, {\n        signIn: this.signIn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }\n      }));\n    }\n  }]);\n\n  return LoginScreen;\n}(React.Component);\n\nexport { LoginScreen as default };\n\nvar LoginPage = function LoginPage(props) {\n  return React.createElement(View, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.header,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, \"Login\"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return props.signIn();\n    },\n    style: styles.googleButton,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#fff\"\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, \"Sign in with Google\")), React.createElement(TextInput, {\n    placeholder: \"Email\",\n    style: styles.TextInput,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"Password\",\n    secureTextEntry: true,\n    style: styles.TextInput,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar LoggedInPage = function LoggedInPage(props) {\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.header,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, \"Welcome:\", props.name), React.createElement(Image, {\n    style: styles.image,\n    source: {\n      uri: props.photoUrl\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"#fff\"\n  },\n  header: {\n    fontSize: 25\n  },\n  image: {\n    marginTop: 15,\n    width: 150,\n    height: 150,\n    borderColor: \"rgba(0,0,0,0.2)\",\n    borderWidth: 3,\n    borderRadius: 150\n  },\n  googleButton: {\n    borderColor: \"#EA4335\",\n    backgroundColor: \"#EA4335\",\n    width: 250,\n    borderWidth: 2,\n    marginTop: 25,\n    alignContent: \"center\",\n    borderRadius: 23,\n    paddingVertical: 7,\n    alignItems: \"center\"\n  },\n  TextInput: {\n    width: 250,\n    borderWidth: 2,\n    marginTop: 15,\n    borderColor: \"#00716F\",\n    borderRadius: 23,\n    paddingVertical: 2,\n    paddingHorizontal: 30\n  }\n});","map":{"version":3,"sources":["C:/Users/Activants46/Desktop/added/app/screen/LoginScreen.js"],"names":["React","div","Icon","Google","LoginScreen","props","signIn","logInAsync","androidClientId","iosClientId","scopes","result","type","setState","signedIn","name","user","photoUrl","console","log","state","styles","container","Component","LoginPage","header","googleButton","color","TextInput","LoggedInPage","image","uri","StyleSheet","create","backgroundColor","fontSize","marginTop","width","height","borderColor","borderWidth","borderRadius","alignContent","paddingVertical","alignItems","paddingHorizontal"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nimport { TouchableOpacity, StyleSheet, Text, View, Image, Button,div ,Icon, TextInput } from \"react-native\"\r\n \r\nimport * as Google from 'expo-google-app-auth';\r\n \r\nexport default class LoginScreen extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      signedIn: false,\r\n      name: \"\",\r\n      photoUrl: \"\"\r\n    }\r\n  }\r\n  signIn = async () => {\r\n    try {\r\n      const result = await Google.logInAsync({\r\n                 androidClientId:\r\n                \"770480272379-786um8vmqi9p35ingldm4celsrk2jshi.apps.googleusercontent.com\",\r\n           iosClientId: \"770480272379-rlr3mcpthnr02t3rul9ls1u5p4k2bsm6.apps.googleusercontent.com\",  \r\n        scopes: [\"profile\", \"email\"]\r\n      })\r\n\r\n      if (result.type === \"success\") {\r\n        this.setState({\r\n          signedIn: true,\r\n          name: result.user.name,\r\n          photoUrl: result.user.photoUrl\r\n        })\r\n      } else {\r\n        console.log(\"cancelled\")\r\n      }\r\n    } catch (e) {\r\n      console.log(\"error\", e)\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <View style={styles.container}>\r\n        {this.state.signedIn ? (\r\n          <LoggedInPage name={this.state.name} photoUrl={this.state.photoUrl} />\r\n        ) : (\r\n          <LoginPage signIn={this.signIn} />\r\n        )}\r\n      </View>\r\n\r\n      \r\n    )\r\n  }\r\n}\r\n\r\nconst LoginPage = props => {\r\n  return (\r\n    <View >\r\n      <Text style={styles.header}>Login</Text>\r\n     \r\n      <TouchableOpacity onPress={() => props.signIn()} style={styles.googleButton }  >\r\n    <Text style={{\r\n\r\n      color:\"#fff\" \r\n    }} >\r\n    Sign in with Google \r\n    </Text>\r\n  </TouchableOpacity>\r\n      <TextInput   placeholder=\"Email\"     style={styles.TextInput}   /> \r\n      <TextInput   placeholder=\"Password\" secureTextEntry style={styles.TextInput}/> \r\n      {/* <Text  onPress={()=>navigate('Register')} >New User</Text> */}\r\n \r\n    </View>\r\n  )\r\n}\r\n\r\nconst LoggedInPage = props => {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.header}>Welcome:{props.name}</Text>\r\n      <Image style={styles.image} source={{ uri: props.photoUrl }} />\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: { \r\n    backgroundColor: \"#fff\", \r\n  }, \r\n  header: {\r\n    fontSize: 25\r\n  },\r\n  image: {\r\n    marginTop: 15,\r\n    width: 150,\r\n    height: 150,\r\n    borderColor: \"rgba(0,0,0,0.2)\",\r\n    borderWidth: 3,\r\n    borderRadius: 150\r\n  },\r\n  googleButton :{   \r\n    borderColor:\"#EA4335\" ,\r\n    backgroundColor:\"#EA4335\" ,\r\n    width: 250 ,  \r\n    borderWidth:2,\r\n    marginTop:25,  \r\n    alignContent:\"center\",\r\n    borderRadius:23,\r\n    paddingVertical:7,\r\n   alignItems :\"center\",\r\n},\r\n  TextInput :{\r\n    width: 250 ,  \r\n    borderWidth:2,\r\n    marginTop:15, \r\n    borderColor:\"#00716F\",\r\n    borderRadius:23,\r\n    paddingVertical:2,\r\n    paddingHorizontal:30,  \r\n  }\r\n})"]},"metadata":{},"sourceType":"module"}