{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Activants46\\\\Desktop\\\\added\\\\KhazanahMobileApp\\\\app\\\\screen\\\\LoginScreen.js\",\n    _this2 = this;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { baseURLAPI, baseURL } from \"../../Global\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { div } from \"react-native-web/dist/index\";\nimport { Icon } from \"react-native-web/dist/index\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport * as Google from \"expo-google-app-auth\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\n\nvar axios = require(\"axios\");\n\nvar LoginScreen = function (_React$Component) {\n  _inherits(LoginScreen, _React$Component);\n\n  var _super = _createSuper(LoginScreen);\n\n  function LoginScreen(props) {\n    var _this;\n\n    _classCallCheck(this, LoginScreen);\n\n    _this = _super.call(this, props);\n\n    _this.signUpUser = function _callee(email, password) {\n      var body;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              Keyboard.dismiss();\n              body = {\n                TX_USER_NAME: email,\n                TX_USER_EMAIL: email,\n                TX_USER_PASSWORD: password\n              };\n              console.log(baseURLAPI);\n              axios.post(baseURLAPI + \"/auth/register\", body).then(function (response) {\n                if (response.data.jwtToken) {\n                  AsyncStorage.setItem(\"jwtToken\", response.data.jwtToken);\n\n                  _this.setState({\n                    signedIn: true,\n                    name: response.data.jwtToken,\n                    photoUrl: \"result.user.photoUrl\"\n                  });\n                }\n              }).catch(function (error) {\n                console.log(\"error\");\n                console.log(error);\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.signInUser = function _callee2(email, password) {\n      var body;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              Keyboard.dismiss();\n              body = {\n                TX_USER_NAME: email,\n                TX_USER_EMAIL: email,\n                TX_USER_PASSWORD: password\n              };\n              console.log(baseURLAPI);\n              axios.post(baseURLAPI + \"/auth/login\", body).then(function (response) {\n                if (response.data.jwtToken) {\n                  AsyncStorage.setItem(\"jwtToken\", response.data.jwtToken);\n\n                  _this.setState({\n                    signedIn: true,\n                    name: response.data.jwtToken,\n                    photoUrl: \"result.user.photoUrl\"\n                  });\n                }\n              }).catch(function (error) {\n                console.log(\"error\");\n                console.log(error);\n              });\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.signIn = function _callee3() {\n      var result;\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return _regeneratorRuntime.awrap(Google.logInAsync({\n                androidClientId: \"770480272379-786um8vmqi9p35ingldm4celsrk2jshi.apps.googleusercontent.com\",\n                iosClientId: \"770480272379-rlr3mcpthnr02t3rul9ls1u5p4k2bsm6.apps.googleusercontent.com\",\n                scopes: [\"profile\", \"email\"]\n              }));\n\n            case 3:\n              result = _context3.sent;\n\n              if (result.type === \"success\") {\n                _this.setState({\n                  signedIn: true,\n                  name: result.user.name,\n                  photoUrl: result.user.photoUrl\n                });\n              } else {\n                console.log(\"cancelled\");\n              }\n\n              _context3.next = 10;\n              break;\n\n            case 7:\n              _context3.prev = 7;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.log(\"error\", _context3.t0);\n\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 7]], Promise);\n    };\n\n    _this.state = {\n      signedIn: false,\n      name: \"\",\n      photoUrl: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 7\n        }\n      }, this.state.signedIn ? React.createElement(LoggedInPage, {\n        name: this.state.name,\n        photoUrl: this.state.photoUrl,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }\n      }) : React.createElement(LoginPage, {\n        signIn: this.signIn,\n        signUpUser: this.signUpUser,\n        signInUser: this.signInUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }\n      }));\n    }\n  }]);\n\n  return LoginScreen;\n}(React.Component);\n\nexport { LoginScreen as default };\n\nvar LoginPage = function LoginPage(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      signupView = _useState2[0],\n      setsignupView = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setemailCredencials = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setpasswordCredencials = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      name = _useState8[0],\n      setnameCredencials = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      picture = _useState10[0],\n      setpictureCredencials = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      phone = _useState12[0],\n      setphoneCredencials = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      url = _useState14[0],\n      seturlCredencials = _useState14[1];\n\n  var viewSignUp = function viewSignUp() {\n    setsignupView(!signupView);\n  };\n\n  return React.createElement(View, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 5\n    }\n  }, signupView ? React.createElement(View, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.header,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }, \"Register\"), React.createElement(Image, {\n    source: {\n      uri: url,\n      isStatic: true\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: imageadd,\n    style: styles.UserButton,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#fff\"\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, \"image\")), React.createElement(TextInput, {\n    style: styles.TextInput,\n    onChangeText: function onChangeText(name) {\n      return setnameCredencials(name);\n    },\n    underlineColorAndroid: \"rgba(0,0,0,0)\",\n    placeholder: \"Name\",\n    placeholderTextColor: \"#002f6c\",\n    selectionColor: \"#fff\",\n    keyboardType: \"default\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 1\n    }\n  }), React.createElement(TextInput, {\n    style: styles.TextInput,\n    onChangeText: function onChangeText(email) {\n      return setemailCredencials(email);\n    },\n    underlineColorAndroid: \"rgba(0,0,0,0)\",\n    placeholder: \"Email\",\n    placeholderTextColor: \"#002f6c\",\n    selectionColor: \"#fff\",\n    keyboardType: \"email-address\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 11\n    }\n  }), React.createElement(TextInput, {\n    style: styles.TextInput,\n    onChangeText: function onChangeText(phone) {\n      return setphoneCredencials(phone);\n    },\n    underlineColorAndroid: \"rgba(0,0,0,0)\",\n    placeholder: \"Phone\",\n    placeholderTextColor: \"#002f6c\",\n    selectionColor: \"#fff\",\n    keyboardType: \"numeric\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 11\n    }\n  }), React.createElement(TextInput, {\n    style: styles.TextInput,\n    onChangeText: function onChangeText(password) {\n      return setpasswordCredencials(password);\n    },\n    underlineColorAndroid: \"rgba(0,0,0,0)\",\n    placeholder: \"Password\",\n    placeholderTextColor: \"#002f6c\",\n    selectionColor: \"#fff\",\n    secureTextEntry: true,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 11\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return props.signUpUser(email, password);\n    },\n    style: styles.UserButton,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#fff\"\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }\n  }, \"Register\")), React.createElement(TouchableOpacity, {\n    onPress: viewSignUp,\n    style: styles.text,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#fff\"\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }\n  }, \"Sign-In\"))) : React.createElement(View, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.header,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 11\n    }\n  }, \"Login\"), React.createElement(TextInput, {\n    style: styles.TextInput,\n    onChangeText: function onChangeText(email) {\n      return setemailCredencials(email);\n    },\n    underlineColorAndroid: \"rgba(0,0,0,0)\",\n    placeholder: \"Email\",\n    placeholderTextColor: \"#002f6c\",\n    selectionColor: \"#fff\",\n    keyboardType: \"email-address\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 11\n    }\n  }), React.createElement(TextInput, {\n    style: styles.TextInput,\n    onChangeText: function onChangeText(password) {\n      return setpasswordCredencials(password);\n    },\n    underlineColorAndroid: \"rgba(0,0,0,0)\",\n    placeholder: \"Password\",\n    placeholderTextColor: \"#002f6c\",\n    selectionColor: \"#fff\",\n    secureTextEntry: true,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 11\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return props.signInUser(email, password);\n    },\n    style: styles.UserButton,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#fff\"\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 13\n    }\n  }, \"Login\")), React.createElement(TouchableOpacity, {\n    onPress: viewSignUp,\n    style: styles.text,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#000000\"\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 13\n    }\n  }, \"Not a user? Sign Up\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return props.signIn();\n    },\n    style: styles.googleButton,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#fff\"\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 13\n    }\n  }, \"Sign in with Google\"))));\n};\n\nvar LoggedInPage = function LoggedInPage(props) {\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.header,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }\n  }, \"Welcome:\", props.name), React.createElement(Image, {\n    style: styles.image,\n    source: {\n      uri: props.photoUrl\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"#fff\"\n  },\n  header: {\n    fontSize: 25\n  },\n  image: {\n    marginTop: 15,\n    width: 150,\n    height: 150,\n    borderColor: \"rgba(0,0,0,0.2)\",\n    borderWidth: 3,\n    borderRadius: 150\n  },\n  text: {\n    width: 250,\n    marginTop: 25,\n    alignContent: \"center\",\n    borderRadius: 4,\n    paddingVertical: 7,\n    alignItems: \"center\"\n  },\n  googleButton: {\n    borderColor: \"#3F80F6\",\n    backgroundColor: \"#3F80F6\",\n    width: 250,\n    borderWidth: 2,\n    marginTop: 25,\n    alignContent: \"center\",\n    borderRadius: 4,\n    paddingVertical: 7,\n    alignItems: \"center\"\n  },\n  UserButton: {\n    borderColor: \"#27AE62\",\n    backgroundColor: \"#27AE62\",\n    width: 250,\n    borderWidth: 2,\n    marginTop: 25,\n    alignContent: \"center\",\n    borderRadius: 23,\n    paddingVertical: 7,\n    alignItems: \"center\"\n  },\n  TextInput: {\n    width: 250,\n    borderWidth: 2,\n    marginTop: 15,\n    borderColor: \"#00716F\",\n    borderRadius: 23,\n    paddingVertical: 2,\n    paddingHorizontal: 30\n  }\n});","map":{"version":3,"sources":["C:/Users/Activants46/Desktop/added/KhazanahMobileApp/app/screen/LoginScreen.js"],"names":["React","useState","useEffect","useContext","baseURLAPI","baseURL","div","Icon","Google","AsyncStorage","axios","require","LoginScreen","props","signUpUser","email","password","Keyboard","dismiss","body","TX_USER_NAME","TX_USER_EMAIL","TX_USER_PASSWORD","console","log","post","then","response","data","jwtToken","setItem","setState","signedIn","name","photoUrl","catch","error","signInUser","signIn","logInAsync","androidClientId","iosClientId","scopes","result","type","user","state","styles","container","Component","LoginPage","signupView","setsignupView","setemailCredencials","setpasswordCredencials","setnameCredencials","picture","setpictureCredencials","phone","setphoneCredencials","url","seturlCredencials","viewSignUp","header","uri","isStatic","imageadd","UserButton","color","TextInput","text","googleButton","LoggedInPage","image","StyleSheet","create","backgroundColor","fontSize","marginTop","width","height","borderColor","borderWidth","borderRadius","alignContent","paddingVertical","alignItems","paddingHorizontal"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport {baseURLAPI ,baseURL} from \"../../Global\";\r\nimport {\r\n  Keyboard,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Image,\r\n  Button,\r\n  div,\r\n  Icon,\r\n  TextInput,\r\n} from \"react-native\";\r\nimport * as Google from \"expo-google-app-auth\";\r\nimport AsyncStorage from \"@react-native-community/async-storage\";\r\nconst axios = require(\"axios\"); \r\n\r\nexport default class LoginScreen extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      signedIn: false,\r\n      name: \"\",\r\n      photoUrl: \"\",\r\n    };\r\n  }\r\n  signUpUser = async (email, password) => {\r\n    Keyboard.dismiss();\r\n\r\n    const body = {\r\n      TX_USER_NAME: email,\r\n      TX_USER_EMAIL: email,\r\n      TX_USER_PASSWORD: password,\r\n    };\r\n    console.log(baseURLAPI);\r\n \r\n  \r\n  axios.post(baseURLAPI+\"/auth/register\",body) .then((response) => {\r\n  \r\n    if (response.data.jwtToken) {\r\n\r\n              AsyncStorage.setItem(\"jwtToken\", response.data.jwtToken);\r\n\r\n            this.setState({\r\n            signedIn: true,\r\n            name:response.data.jwtToken ,\r\n            photoUrl: \"result.user.photoUrl\",\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error\");\r\n\r\n        console.log(error);\r\n      });\r\n  };\r\n  signInUser = async (email, password) => {\r\n    Keyboard.dismiss();\r\n\r\n    const body = {\r\n      TX_USER_NAME: email,\r\n      TX_USER_EMAIL: email,\r\n      TX_USER_PASSWORD: password,\r\n    };\r\n    console.log(baseURLAPI);\r\n   axios.post(baseURLAPI+\"/auth/login\",body) .then((response) => {\r\n \r\n     \r\n    \r\n    if (response.data.jwtToken) {\r\n          AsyncStorage.setItem(\"jwtToken\",response.data.jwtToken);\r\n\r\n        this.setState({\r\n        signedIn: true,\r\n        name:response.data.jwtToken ,\r\n        photoUrl: \"result.user.photoUrl\",\r\n      });\r\n \r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error\");\r\n\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  signIn = async () => {\r\n    try {\r\n      const result = await Google.logInAsync({\r\n        androidClientId:\r\n          \"770480272379-786um8vmqi9p35ingldm4celsrk2jshi.apps.googleusercontent.com\",\r\n        iosClientId:\r\n          \"770480272379-rlr3mcpthnr02t3rul9ls1u5p4k2bsm6.apps.googleusercontent.com\",\r\n        scopes: [\"profile\", \"email\"],\r\n      });\r\n\r\n      if (result.type === \"success\") {\r\n        this.setState({\r\n          signedIn: true,\r\n          name: result.user.name,\r\n          photoUrl: result.user.photoUrl,\r\n        });\r\n      } else {\r\n        console.log(\"cancelled\");\r\n      }\r\n    } catch (e) {\r\n      console.log(\"error\", e);\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <View style={styles.container}>\r\n        {this.state.signedIn ? (\r\n          <LoggedInPage name={this.state.name} photoUrl={this.state.photoUrl} />\r\n        ) : (\r\n          <LoginPage\r\n            signIn={this.signIn}\r\n            signUpUser={this.signUpUser}\r\n            signInUser={this.signInUser}\r\n          />\r\n        )}\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst LoginPage = (props) => {\r\n  const [signupView, setsignupView] = useState(false);\r\n  const [email, setemailCredencials] = useState(\"\");\r\n  const [password, setpasswordCredencials] = useState(\"\"); \r\n  \r\n  const [name, setnameCredencials] = useState(\"\");\r\n  const [picture, setpictureCredencials] = useState(\"\");\r\n  const [phone, setphoneCredencials] = useState(\"\");\r\n\r\n\r\n  const [url, seturlCredencials] = useState(\"\"); \r\n\r\n   const viewSignUp = () => {\r\n    setsignupView(!signupView);\r\n  };\r\n  \r\n  \r\n  return (\r\n    <View>\r\n      {signupView ? (\r\n        <View>\r\n          <Text style={styles.header}>Register</Text>\r\n         \r\n         \r\n          <Image source={{ uri: url, isStatic: true }}/>\r\n\r\n        \r\n          <TouchableOpacity\r\n           onPress={ imageadd} \r\n            style={styles.UserButton}\r\n          >\r\n            <Text\r\n              style={{\r\n                color: \"#fff\",\r\n              }}\r\n            >\r\n              image\r\n            </Text>\r\n          </TouchableOpacity>\r\n  \r\n<TextInput\r\n            style={styles.TextInput}\r\n            onChangeText={(name) => setnameCredencials(name)}\r\n            underlineColorAndroid=\"rgba(0,0,0,0)\"\r\n            placeholder=\"Name\"\r\n            placeholderTextColor=\"#002f6c\"\r\n            selectionColor=\"#fff\"\r\n            keyboardType=\"default\"\r\n          />\r\n\r\n\r\n\r\n\r\n          <TextInput\r\n            style={styles.TextInput}\r\n            onChangeText={(email) => setemailCredencials(email)}\r\n            underlineColorAndroid=\"rgba(0,0,0,0)\"\r\n            placeholder=\"Email\"\r\n            placeholderTextColor=\"#002f6c\"\r\n            selectionColor=\"#fff\"\r\n            keyboardType=\"email-address\"\r\n          />\r\n\r\n         \r\n          <TextInput\r\n            style={styles.TextInput}\r\n            onChangeText={(phone) => setphoneCredencials(phone)}\r\n            underlineColorAndroid=\"rgba(0,0,0,0)\"\r\n            placeholder=\"Phone\"\r\n            placeholderTextColor=\"#002f6c\"\r\n            selectionColor=\"#fff\"\r\n            keyboardType=\"numeric\"\r\n          />\r\n\r\n\r\n\r\n          <TextInput\r\n            style={styles.TextInput}\r\n            onChangeText={(password) => setpasswordCredencials(password)}\r\n            underlineColorAndroid=\"rgba(0,0,0,0)\"\r\n            placeholder=\"Password\"\r\n            placeholderTextColor=\"#002f6c\"\r\n            selectionColor=\"#fff\"\r\n            secureTextEntry={true}\r\n          />\r\n          <TouchableOpacity\r\n            onPress={() => props.signUpUser(email, password)}\r\n            style={styles.UserButton}\r\n          >\r\n            <Text\r\n              style={{\r\n                color: \"#fff\",\r\n              }}\r\n            >\r\n              Register\r\n            </Text>\r\n          </TouchableOpacity>\r\n\r\n          <TouchableOpacity onPress={ viewSignUp} style={styles.text}>\r\n            <Text\r\n              style={{\r\n                color: \"#fff\",\r\n              }}\r\n            >\r\n              Sign-In\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      ) : (\r\n        <View>\r\n          <Text style={styles.header}>Login</Text>\r\n\r\n          <TextInput\r\n            style={styles.TextInput}\r\n            onChangeText={(email) => setemailCredencials(email)}\r\n            underlineColorAndroid=\"rgba(0,0,0,0)\"\r\n            placeholder=\"Email\"\r\n            placeholderTextColor=\"#002f6c\"\r\n            selectionColor=\"#fff\"\r\n            keyboardType=\"email-address\"\r\n          />\r\n\r\n          <TextInput\r\n            style={styles.TextInput}\r\n            onChangeText={(password) => setpasswordCredencials(password)}\r\n            underlineColorAndroid=\"rgba(0,0,0,0)\"\r\n            placeholder=\"Password\"\r\n            placeholderTextColor=\"#002f6c\"\r\n            selectionColor=\"#fff\"\r\n            secureTextEntry={true}\r\n          />\r\n          <TouchableOpacity\r\n            onPress={() => props.signInUser(email, password)}\r\n            style={styles.UserButton}\r\n          >\r\n            <Text style={{ color: \"#fff\" }}>Login</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity onPress={  viewSignUp  } style={styles.text}>\r\n            <Text\r\n              style={{\r\n                color: \"#000000\",\r\n              }}\r\n            >\r\n              Not a user? Sign Up\r\n            </Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            onPress={() => props.signIn()}\r\n            style={styles.googleButton}\r\n          >\r\n            <Text style={{ color: \"#fff\" }}>Sign in with Google</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst LoggedInPage = (props) => {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.header}>Welcome:{props.name}</Text>\r\n      <Image style={styles.image} source={{ uri: props.photoUrl }} />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: \"#fff\",\r\n  },\r\n  header: {\r\n    fontSize: 25,\r\n  },\r\n  image: {\r\n    marginTop: 15,\r\n    width: 150,\r\n    height: 150,\r\n    borderColor: \"rgba(0,0,0,0.2)\",\r\n    borderWidth: 3,\r\n    borderRadius: 150,\r\n  },\r\n  text: {\r\n    width: 250,\r\n    marginTop: 25,\r\n    alignContent: \"center\",\r\n    borderRadius: 4,\r\n    paddingVertical: 7,\r\n    alignItems: \"center\",\r\n  },\r\n  googleButton: {\r\n    borderColor: \"#3F80F6\",\r\n    backgroundColor: \"#3F80F6\",\r\n    width: 250,\r\n    borderWidth: 2,\r\n    marginTop: 25,\r\n    alignContent: \"center\",\r\n    borderRadius: 4,\r\n    paddingVertical: 7,\r\n    alignItems: \"center\",\r\n  },\r\n  UserButton: {\r\n    borderColor: \"#27AE62\",\r\n    backgroundColor: \"#27AE62\",\r\n    width: 250,\r\n    borderWidth: 2,\r\n    marginTop: 25,\r\n    alignContent: \"center\",\r\n    borderRadius: 23,\r\n    paddingVertical: 7,\r\n    alignItems: \"center\",\r\n  },\r\n  TextInput: {\r\n    width: 250,\r\n    borderWidth: 2,\r\n    marginTop: 15,\r\n    borderColor: \"#00716F\",\r\n    borderRadius: 23,\r\n    paddingVertical: 2,\r\n    paddingHorizontal: 30,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}