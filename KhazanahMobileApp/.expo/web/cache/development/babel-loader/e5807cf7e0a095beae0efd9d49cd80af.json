{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Activants46\\\\Desktop\\\\added\\\\KhazanahMobileApp\\\\app\\\\screen\\\\LoginScreen.js\",\n    _this2 = this;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport baseURLAPI from \"../../Global\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { div } from \"react-native-web/dist/index\";\nimport { Icon } from \"react-native-web/dist/index\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport * as Google from \"expo-google-app-auth\";\n\nvar LoginScreen = function (_React$Component) {\n  _inherits(LoginScreen, _React$Component);\n\n  var _super = _createSuper(LoginScreen);\n\n  function LoginScreen(props) {\n    var _this;\n\n    _classCallCheck(this, LoginScreen);\n\n    _this = _super.call(this, props);\n\n    _this.signUpUser = function (email, password) {\n      Keyboard.dismiss();\n      var body = {\n        TX_USER_NAME: email,\n        TX_USER_EMAIL: email,\n        TX_USER_PASSWORD: password\n      };\n      console.log(body);\n      var response = fetch(baseURLAPI + \"/auth/register\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      var parseResponse = response.json();\n\n      if (parseResponse.jwtToken) {\n        AsyncStorage.setItem(\"jwtToken\", parseResponse.jwtToken);\n\n        _this.setState({\n          signedIn: true,\n          name: result.user.name,\n          photoUrl: result.user.photoUrl\n        });\n      }\n    };\n\n    _this.signInUser = function (email, password) {\n      Keyboard.dismiss();\n      var body = {\n        TX_USER_NAME: email,\n        TX_USER_EMAIL: email,\n        TX_USER_PASSWORD: password\n      };\n      console.log(body);\n      axios.post(baseURLAPI + \"/auth/login\", body, {\n        headers: headers\n      }).then(function (res) {\n        var parseResponse = response.json();\n        console.log(parseResponse);\n\n        if (parseResponse.jwtToken) {\n          AsyncStorage.setItem(\"jwtToken\", parseResponse.jwtToken);\n\n          _this.setState({\n            signedIn: true,\n            name: result.user.name,\n            photoUrl: result.user.photoUrl\n          });\n        }\n      }).catch(function (error) {\n        console.log(\"error\");\n        console.log(error);\n      });\n    };\n\n    _this.signIn = function _callee() {\n      var _result;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(Google.logInAsync({\n                androidClientId: \"770480272379-786um8vmqi9p35ingldm4celsrk2jshi.apps.googleusercontent.com\",\n                iosClientId: \"770480272379-rlr3mcpthnr02t3rul9ls1u5p4k2bsm6.apps.googleusercontent.com\",\n                scopes: [\"profile\", \"email\"]\n              }));\n\n            case 3:\n              _result = _context.sent;\n\n              if (_result.type === \"success\") {\n                _this.setState({\n                  signedIn: true,\n                  name: _result.user.name,\n                  photoUrl: _result.user.photoUrl\n                });\n              } else {\n                console.log(\"cancelled\");\n              }\n\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(\"error\", _context.t0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 7]], Promise);\n    };\n\n    _this.state = {\n      signedIn: false,\n      name: \"\",\n      photoUrl: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 7\n        }\n      }, this.state.signedIn ? React.createElement(LoggedInPage, {\n        name: this.state.name,\n        photoUrl: this.state.photoUrl,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }\n      }) : React.createElement(LoginPage, {\n        signIn: this.signIn,\n        signUpUser: this.signUpUser,\n        signInUser: this.signInUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }\n      }));\n    }\n  }]);\n\n  return LoginScreen;\n}(React.Component);\n\nexport { LoginScreen as default };\n\nvar LoginPage = function LoginPage(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      signupView = _useState2[0],\n      setsignupView = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setemailCredencials = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setpasswordCredencials = _useState6[1];\n\n  var viewSignUp = function viewSignUp() {\n    setsignupView(!signupView);\n  };\n\n  return React.createElement(View, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 5\n    }\n  }, signupView ? React.createElement(View, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.header,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, \"Register\"), React.createElement(TextInput, {\n    style: styles.TextInput,\n    onChangeText: function onChangeText(email) {\n      return setemailCredencials(email);\n    },\n    underlineColorAndroid: \"rgba(0,0,0,0)\",\n    placeholder: \"Email\",\n    placeholderTextColor: \"#002f6c\",\n    selectionColor: \"#fff\",\n    keyboardType: \"email-address\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }), React.createElement(TextInput, {\n    style: styles.TextInput,\n    onChangeText: function onChangeText(password) {\n      return setpasswordCredencials(password);\n    },\n    underlineColorAndroid: \"rgba(0,0,0,0)\",\n    placeholder: \"Password\",\n    placeholderTextColor: \"#002f6c\",\n    selectionColor: \"#fff\",\n    secureTextEntry: true,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return props.signUpUser(email, password);\n    },\n    style: styles.UserButton,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#fff\"\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, \"Register\")), React.createElement(TouchableOpacity, {\n    onPress: _this2.viewSignUp(),\n    style: styles.text,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#fff\"\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }, \"Sign-In\"))) : React.createElement(View, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.header,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 11\n    }\n  }, \"Login\"), React.createElement(TextInput, {\n    style: styles.TextInput,\n    onChangeText: function onChangeText(email) {\n      return setemailCredencials(email);\n    },\n    underlineColorAndroid: \"rgba(0,0,0,0)\",\n    placeholder: \"Email\",\n    placeholderTextColor: \"#002f6c\",\n    selectionColor: \"#fff\",\n    keyboardType: \"email-address\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 11\n    }\n  }), React.createElement(TextInput, {\n    style: styles.TextInput,\n    onChangeText: function onChangeText(password) {\n      return setpasswordCredencials(password);\n    },\n    underlineColorAndroid: \"rgba(0,0,0,0)\",\n    placeholder: \"Password\",\n    placeholderTextColor: \"#002f6c\",\n    selectionColor: \"#fff\",\n    secureTextEntry: true,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 11\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return props.signInUser(email, password);\n    },\n    style: styles.UserButton,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#fff\"\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }\n  }, \"Login\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return viewSignIn();\n    },\n    style: styles.text,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#000000\"\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }\n  }, \"Not a user? Sign Up\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return props.signIn();\n    },\n    style: styles.googleButton,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#fff\"\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }\n  }, \"Sign in with Google\"))));\n};\n\nvar LoggedInPage = function LoggedInPage(props) {\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.header,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }\n  }, \"Welcome:\", props.name), React.createElement(Image, {\n    style: styles.image,\n    source: {\n      uri: props.photoUrl\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"#fff\"\n  },\n  header: {\n    fontSize: 25\n  },\n  image: {\n    marginTop: 15,\n    width: 150,\n    height: 150,\n    borderColor: \"rgba(0,0,0,0.2)\",\n    borderWidth: 3,\n    borderRadius: 150\n  },\n  text: {\n    width: 250,\n    marginTop: 25,\n    alignContent: \"center\",\n    borderRadius: 4,\n    paddingVertical: 7,\n    alignItems: \"center\"\n  },\n  googleButton: {\n    borderColor: \"#3F80F6\",\n    backgroundColor: \"#3F80F6\",\n    width: 250,\n    borderWidth: 2,\n    marginTop: 25,\n    alignContent: \"center\",\n    borderRadius: 4,\n    paddingVertical: 7,\n    alignItems: \"center\"\n  },\n  UserButton: {\n    borderColor: \"#27AE62\",\n    backgroundColor: \"#27AE62\",\n    width: 250,\n    borderWidth: 2,\n    marginTop: 25,\n    alignContent: \"center\",\n    borderRadius: 23,\n    paddingVertical: 7,\n    alignItems: \"center\"\n  },\n  TextInput: {\n    width: 250,\n    borderWidth: 2,\n    marginTop: 15,\n    borderColor: \"#00716F\",\n    borderRadius: 23,\n    paddingVertical: 2,\n    paddingHorizontal: 30\n  }\n});","map":{"version":3,"sources":["C:/Users/Activants46/Desktop/added/KhazanahMobileApp/app/screen/LoginScreen.js"],"names":["React","useState","useEffect","useContext","baseURLAPI","div","Icon","AsyncStorage","Google","LoginScreen","props","signUpUser","email","password","Keyboard","dismiss","body","TX_USER_NAME","TX_USER_EMAIL","TX_USER_PASSWORD","console","log","response","fetch","method","headers","JSON","stringify","parseResponse","json","jwtToken","setItem","setState","signedIn","name","result","user","photoUrl","signInUser","axios","post","then","res","catch","error","signIn","logInAsync","androidClientId","iosClientId","scopes","type","state","styles","container","Component","LoginPage","signupView","setsignupView","setemailCredencials","setpasswordCredencials","viewSignUp","header","TextInput","UserButton","color","text","viewSignIn","googleButton","LoggedInPage","image","uri","StyleSheet","create","backgroundColor","fontSize","marginTop","width","height","borderColor","borderWidth","borderRadius","alignContent","paddingVertical","alignItems","paddingHorizontal"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport baseURLAPI from \"../../Global\";\r\nimport {\r\n  Keyboard,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Image,\r\n  Button,\r\n  div,\r\n  Icon,\r\n  TextInput,\r\n} from \"react-native\";\r\nimport AsyncStorage from \"@react-native-community/async-storage\";\r\n\r\nimport * as Google from \"expo-google-app-auth\";\r\n\r\nexport default class LoginScreen extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      signedIn: false,\r\n      name: \"\",\r\n      photoUrl: \"\",\r\n    };\r\n  }\r\n  signUpUser = (email, password) => {\r\n    Keyboard.dismiss();\r\n\r\n    const body = {\r\n      TX_USER_NAME: email,\r\n      TX_USER_EMAIL: email,\r\n      TX_USER_PASSWORD: password,\r\n    };\r\n    console.log(body);\r\n\r\n    const response = fetch(baseURLAPI + \"/auth/register\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(body),\r\n    });\r\n\r\n    const parseResponse = response.json();\r\n\r\n    if (parseResponse.jwtToken) {\r\n      AsyncStorage.setItem(\"jwtToken\", parseResponse.jwtToken);\r\n\r\n      this.setState({\r\n        signedIn: true,\r\n        name: result.user.name,\r\n        photoUrl: result.user.photoUrl,\r\n      });\r\n    }\r\n  };\r\n  signInUser = (email, password) => {\r\n    Keyboard.dismiss();\r\n\r\n    const body = {\r\n      TX_USER_NAME: email,\r\n      TX_USER_EMAIL: email,\r\n      TX_USER_PASSWORD: password,\r\n    };\r\n    console.log(body);\r\n\r\n\r\n    axios.post(baseURLAPI + \"/auth/login\" , body, {\r\n      headers: headers\r\n    }) \r\n.then(res => {\r\n \r\n  const parseResponse = response.json();\r\n  console.log(parseResponse) \r\n  if (parseResponse.jwtToken) {\r\n    AsyncStorage.setItem(\"jwtToken\", parseResponse.jwtToken);\r\n     \r\n    this.setState({\r\n      signedIn: true,\r\n      name: result.user.name,\r\n      photoUrl: result.user.photoUrl,\r\n    });\r\n  }\r\n}).catch((error) => {   console.log(\"error\")\r\n\r\n   console.log(error)\r\n\r\n\r\n}); \r\n \r\n  };\r\n\r\n  signIn = async () => {\r\n    try {\r\n      const result = await Google.logInAsync({\r\n        androidClientId:\r\n          \"770480272379-786um8vmqi9p35ingldm4celsrk2jshi.apps.googleusercontent.com\",\r\n        iosClientId:\r\n          \"770480272379-rlr3mcpthnr02t3rul9ls1u5p4k2bsm6.apps.googleusercontent.com\",\r\n        scopes: [\"profile\", \"email\"],\r\n      });\r\n\r\n      if (result.type === \"success\") {\r\n        this.setState({\r\n          signedIn: true,\r\n          name: result.user.name,\r\n          photoUrl: result.user.photoUrl,\r\n        });\r\n      } else {\r\n        console.log(\"cancelled\");\r\n      }\r\n    } catch (e) {\r\n      console.log(\"error\", e);\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <View style={styles.container}>\r\n        {this.state.signedIn ? (\r\n          <LoggedInPage name={this.state.name} photoUrl={this.state.photoUrl} />\r\n        ) : (\r\n          <LoginPage\r\n            signIn={this.signIn}\r\n            signUpUser={this.signUpUser}\r\n            signInUser={this.signInUser}\r\n          />\r\n        )}\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst LoginPage = (props) => {\r\n  const [signupView, setsignupView] = useState(false);\r\n  const [email, setemailCredencials] = useState(\"\");\r\n  const [password, setpasswordCredencials] = useState(\"\");\r\n\r\n  const   viewSignUp = () => {\r\n    setsignupView(!signupView);\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      {signupView ? (\r\n        <View>\r\n          <Text style={styles.header}>Register</Text>\r\n\r\n          <TextInput\r\n            style={styles.TextInput}\r\n            onChangeText={(email) => setemailCredencials(email)}\r\n            underlineColorAndroid=\"rgba(0,0,0,0)\"\r\n            placeholder=\"Email\"\r\n            placeholderTextColor=\"#002f6c\"\r\n            selectionColor=\"#fff\"\r\n            keyboardType=\"email-address\"\r\n          />\r\n\r\n          <TextInput\r\n            style={styles.TextInput}\r\n            onChangeText={(password) => setpasswordCredencials(password)}\r\n            underlineColorAndroid=\"rgba(0,0,0,0)\"\r\n            placeholder=\"Password\"\r\n            placeholderTextColor=\"#002f6c\"\r\n            selectionColor=\"#fff\"\r\n            secureTextEntry={true}\r\n          />\r\n          <TouchableOpacity\r\n            onPress={() => props.signUpUser(email, password)}\r\n            style={styles.UserButton}\r\n          >\r\n            <Text\r\n              style={{\r\n                color: \"#fff\",\r\n              }}\r\n            >\r\n              Register\r\n            </Text>\r\n          </TouchableOpacity>\r\n\r\n          <TouchableOpacity onPress={this.viewSignUp()} style={styles.text}>\r\n            <Text\r\n              style={{\r\n                color: \"#fff\",\r\n              }}\r\n            >\r\n              Sign-In\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      ) : (\r\n        <View>\r\n          <Text style={styles.header}>Login</Text>\r\n\r\n          <TextInput\r\n            style={styles.TextInput}\r\n            onChangeText={(email) => setemailCredencials(email)}\r\n            underlineColorAndroid=\"rgba(0,0,0,0)\"\r\n            placeholder=\"Email\"\r\n            placeholderTextColor=\"#002f6c\"\r\n            selectionColor=\"#fff\"\r\n            keyboardType=\"email-address\"\r\n          />\r\n\r\n          <TextInput\r\n            style={styles.TextInput}\r\n            onChangeText={(password) => setpasswordCredencials(password)}\r\n            underlineColorAndroid=\"rgba(0,0,0,0)\"\r\n            placeholder=\"Password\"\r\n            placeholderTextColor=\"#002f6c\"\r\n            selectionColor=\"#fff\"\r\n            secureTextEntry={true}\r\n          />\r\n          <TouchableOpacity\r\n            onPress={() => props.signInUser(email, password)}\r\n            style={styles.UserButton}\r\n          >\r\n            <Text style={{ color: \"#fff\" }}>Login</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity onPress={() => viewSignIn()} style={styles.text}>\r\n            <Text\r\n              style={{\r\n                color: \"#000000\",\r\n              }}\r\n            >\r\n              Not a user? Sign Up\r\n            </Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            onPress={() => props.signIn()}\r\n            style={styles.googleButton}\r\n          >\r\n            <Text style={{ color: \"#fff\" }}>Sign in with Google</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst LoggedInPage = (props) => {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.header}>Welcome:{props.name}</Text>\r\n      <Image style={styles.image} source={{ uri: props.photoUrl }} />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: \"#fff\",\r\n  },\r\n  header: {\r\n    fontSize: 25,\r\n  },\r\n  image: {\r\n    marginTop: 15,\r\n    width: 150,\r\n    height: 150,\r\n    borderColor: \"rgba(0,0,0,0.2)\",\r\n    borderWidth: 3,\r\n    borderRadius: 150,\r\n  },\r\n  text: {\r\n    width: 250,\r\n    marginTop: 25,\r\n    alignContent: \"center\",\r\n    borderRadius: 4,\r\n    paddingVertical: 7,\r\n    alignItems: \"center\",\r\n  },\r\n  googleButton: {\r\n    borderColor: \"#3F80F6\",\r\n    backgroundColor: \"#3F80F6\",\r\n    width: 250,\r\n    borderWidth: 2,\r\n    marginTop: 25,\r\n    alignContent: \"center\",\r\n    borderRadius: 4,\r\n    paddingVertical: 7,\r\n    alignItems: \"center\",\r\n  },\r\n  UserButton: {\r\n    borderColor: \"#27AE62\",\r\n    backgroundColor: \"#27AE62\",\r\n    width: 250,\r\n    borderWidth: 2,\r\n    marginTop: 25,\r\n    alignContent: \"center\",\r\n    borderRadius: 23,\r\n    paddingVertical: 7,\r\n    alignItems: \"center\",\r\n  },\r\n  TextInput: {\r\n    width: 250,\r\n    borderWidth: 2,\r\n    marginTop: 15,\r\n    borderColor: \"#00716F\",\r\n    borderRadius: 23,\r\n    paddingVertical: 2,\r\n    paddingHorizontal: 30,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}