{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Activants46\\\\Desktop\\\\added\\\\KhazanahMobileApp\\\\pages\\\\TabPages\\\\Form.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport { Actions } from 'react-native-router-flux';\n\nvar Form = function (_Component) {\n  _inherits(Form, _Component);\n\n  var _super = _createSuper(Form);\n\n  function Form(props) {\n    var _this;\n\n    _classCallCheck(this, Form);\n\n    _this = _super.call(this, props);\n\n    _this.saveData = function _callee() {\n      var _this$state, email, password, loginDetails, _loginDetails, ld;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this$state = _this.state, email = _this$state.email, password = _this$state.password;\n              loginDetails = {\n                email: email,\n                password: password\n              };\n\n              if (!(_this.props.type !== 'Login')) {\n                _context.next = 9;\n                break;\n              }\n\n              AsyncStorage.setItem('loginDetails', JSON.stringify(loginDetails));\n              Keyboard.dismiss();\n              alert(\"You have registered successfully. \" + 'Your credentials are:- User-ID: ' + email + ' P.W.:' + password);\n\n              _this.login();\n\n              _context.next = 21;\n              break;\n\n            case 9:\n              if (!(_this.props.type == 'Login')) {\n                _context.next = 21;\n                break;\n              }\n\n              _context.prev = 10;\n              _context.next = 13;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('loginDetails'));\n\n            case 13:\n              _loginDetails = _context.sent;\n              ld = JSON.parse(_loginDetails);\n\n              if (ld.email != null && ld.password != null) {\n                if (ld.email == email && ld.password == password) {\n                  alert('Welcome Back !');\n                } else {\n                  alert('Mentioned Email and Password does not exist!');\n                }\n              }\n\n              _context.next = 21;\n              break;\n\n            case 18:\n              _context.prev = 18;\n              _context.t0 = _context[\"catch\"](10);\n              alert(_context.t0);\n\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[10, 18]], Promise);\n    };\n\n    _this.showData = function _callee2() {\n      var loginDetails, ld;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('Login Details Are'));\n\n            case 2:\n              loginDetails = _context2.sent;\n              ld = JSON.parse(loginDetails);\n              alert('email: ' + ld.email + ' ' + 'password: ' + ld.password);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      email: '',\n      password: ''\n    };\n    return _this;\n  }\n\n  _createClass(Form, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 1\n        }\n      }, React.createElement(TextInput, {\n        style: styles.inputBox,\n        onChangeText: function onChangeText(email) {\n          return _this2.setState({\n            email: email\n          });\n        },\n        underlineColorAndroid: \"rgba(0,0,0,0)\",\n        placeholder: \"User ID\",\n        placeholderTextColor: \"#850c22\",\n        selectionColor: \"#fff\",\n        keyboardType: \"email-address\",\n        onSubmitEditing: function onSubmitEditing() {\n          return _this2.password.focus();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 1\n        }\n      }), React.createElement(TextInput, {\n        style: styles.inputBox,\n        onChangeText: function onChangeText(password) {\n          return _this2.setState({\n            password: password\n          });\n        },\n        underlineColorAndroid: \"rgba(0,0,0,0)\",\n        placeholder: \"Enter Password\",\n        secureTextEntry: true,\n        placeholderTextColor: \"#850c22\",\n        ref: function ref(input) {\n          return _this2.password = input;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 1\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: styles.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 1\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonText,\n        onPress: this.saveData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 1\n        }\n      }, this.props.type)));\n    }\n  }]);\n\n  return Form;\n}(Component);\n\nexport { Form as default };\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  inputBox: {\n    width: 299,\n    backgroundColor: '#ede8e8',\n    borderRadius: 24,\n    paddingHorizontal: 15,\n    fontSize: 15,\n    color: '#991172',\n    marginVertical: 9\n  },\n  button: {\n    width: 299,\n    backgroundColor: '#b8236b',\n    borderRadius: 24,\n    marginVertical: 9,\n    paddingVertical: 11\n  },\n  buttonText: {\n    fontSize: 15,\n    fontWeight: '500',\n    color: '#ffffff',\n    textAlign: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/Activants46/Desktop/added/KhazanahMobileApp/pages/TabPages/Form.js"],"names":["React","Component","AsyncStorage","Actions","Form","props","saveData","state","email","password","loginDetails","type","setItem","JSON","stringify","Keyboard","dismiss","alert","login","getItem","ld","parse","showData","styles","container","inputBox","setState","focus","input","button","buttonText","StyleSheet","create","justifyContent","alignItems","width","backgroundColor","borderRadius","paddingHorizontal","fontSize","color","marginVertical","paddingVertical","fontWeight","textAlign"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { StyleSheet\r\n, Text\r\n, View\r\n, TextInput\r\n, TouchableOpacity\r\n, AsyncStorage\r\n, Keyboard } from 'react-native';\r\nimport {Actions} from 'react-native-router-flux';\r\nexport default class Form extends Component {\r\nconstructor(props){ super(props); this.state={\r\nemail:'', password: ''\r\n}\r\n}\r\nsaveData =async()=>{\r\nconst {email,password} = this.state;\r\nlet loginDetails={ email: email, password: password\r\n}\r\nif(this.props.type !== 'Login')\r\n{\r\nAsyncStorage.setItem('loginDetails', JSON.stringify(loginDetails));\r\nKeyboard.dismiss();\r\nalert(\"You have registered successfully. \" + 'Your credentials are:- User-ID: ' + email + ' P.W.:' + password);\r\nthis.login();\r\n}\r\nelse if(this.props.type == 'Login')\r\n{\r\ntry{\r\nlet loginDetails = await AsyncStorage.getItem('loginDetails');\r\nlet ld = JSON.parse(loginDetails);\r\nif (ld.email != null && ld.password != null)\r\n{\r\nif (ld.email == email && ld.password == password)\r\n{\r\nalert('Welcome Back !');\r\n}\r\nelse\r\n{\r\nalert('Mentioned Email and Password does not exist!');\r\n}\r\n}\r\n}catch(error)\r\n{\r\nalert(error);\r\n}\r\n}\r\n}\r\nshowData = async()=>{\r\nlet loginDetails = await AsyncStorage.getItem('Login Details Are'); let ld = JSON.parse(loginDetails);\r\nalert('email: '+ ld.email + ' ' + 'password: ' + ld.password);\r\n}\r\nrender() {\r\nreturn(\r\n<View style={styles.container}>\r\n<TextInput style={styles.inputBox} onChangeText={(email) => this.setState({email})} underlineColorAndroid='rgba(0,0,0,0)' placeholder=\"User ID\"\r\nplaceholderTextColor = \"#850c22\" selectionColor=\"#fff\" keyboardType=\"email-address\"\r\nonSubmitEditing={()=> this.password.focus()}/>\r\n<TextInput style={styles.inputBox} onChangeText={(password) => this.setState({password})} underlineColorAndroid='rgba(0,0,0,0)' placeholder=\"Enter Password\"\r\nsecureTextEntry={true}\r\nplaceholderTextColor = \"#850c22\" ref={(input) => this.password = input}\r\n/>\r\n<TouchableOpacity style={styles.button}>\r\n<Text style={styles.buttonText} onPress={this.saveData}>{this.props.type}</Text>\r\n</TouchableOpacity>\r\n</View>\r\n)\r\n}\r\n}\r\nconst styles = StyleSheet.create({ container: {\r\njustifyContent: 'center', alignItems: 'center',\r\n},\r\ninputBox: {\r\nwidth: 299, backgroundColor: '#ede8e8', borderRadius: 24,\r\npaddingHorizontal: 15,\r\nfontSize: 15,\r\ncolor: '#991172',\r\nmarginVertical: 9\r\n},\r\nbutton: {\r\nwidth: 299,\r\nbackgroundColor: '#b8236b', borderRadius: 24,\r\nmarginVertical: 9,\r\npaddingVertical: 11\r\n},\r\nbuttonText: {\r\nfontSize: 15,\r\nfontWeight: '500', color: '#ffffff', textAlign: 'center'\r\n}\r\n});"]},"metadata":{},"sourceType":"module"}