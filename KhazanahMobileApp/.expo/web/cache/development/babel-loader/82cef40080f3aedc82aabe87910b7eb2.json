{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Activants46\\\\Desktop\\\\added\\\\KhazanahMobileApp\\\\app\\\\screen\\\\Homepage.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { baseURLAPI, baseURL } from \"../../Global\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { div } from \"react-native-web/dist/index\";\nimport { Icon } from \"react-native-web/dist/index\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport useColorScheme from \"react-native-web/dist/exports/useColorScheme\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport * as Google from \"expo-google-app-auth\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\n\nvar axios = require(\"axios\");\n\nimport Constants from \"expo-constants\";\nimport styles from \"../styles/styles\";\n\nvar Homepage = function (_React$Component) {\n  _inherits(Homepage, _React$Component);\n\n  var _super = _createSuper(Homepage);\n\n  function Homepage(props) {\n    var _this;\n\n    _classCallCheck(this, Homepage);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      name: \"\",\n      photoUrl: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Homepage, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableOpacity, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        onPress: pickImage,\n        style: {\n          color: \"#002f6c\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }\n      }, \"kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk\", AsyncStorage.getItem(\"jwtToken\"))));\n    }\n  }]);\n\n  return Homepage;\n}(React.Component);\n\nexport { Homepage as default };","map":{"version":3,"sources":["C:/Users/Activants46/Desktop/added/KhazanahMobileApp/app/screen/Homepage.js"],"names":["React","useState","useEffect","useContext","baseURLAPI","baseURL","div","Icon","ImagePicker","Google","AsyncStorage","axios","require","Constants","styles","Homepage","props","state","name","photoUrl","container","pickImage","color","getItem","Component"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,UAAT,EAAqBC,OAArB;;;;;;;;;SAUEC,G;SACAC,I;;;AAIF,OAAO,KAAKC,WAAZ,MAA6B,mBAA7B;AACA,OAAO,KAAKC,MAAZ,MAAwB,sBAAxB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AACA,IAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,OAAQC,MAAR;;IAEqBC,Q;;;;;AACnB,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAFiB;AAMlB;;;;6BACQ;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEL,MAAM,CAACM,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AACE,QAAA,OAAO,EAAEC,SADX;AAEE,QAAA,KAAK,EAAE;AACLC,UAAAA,KAAK,EAAE;AADF,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDAOGZ,YAAY,CAACa,OAAb,CAAqB,UAArB,CAPH,CADF,CADF,CADF;AAeD;;;;EAxBmCvB,KAAK,CAACwB,S;;SAAvBT,Q","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { baseURLAPI, baseURL } from \"../../Global\";\r\nimport {\r\n  Keyboard,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Image,\r\n  Platform,\r\n  Button,\r\n  div,\r\n  Icon,\r\n  TextInput,\r\n  useColorScheme,\r\n} from \"react-native\";\r\nimport * as ImagePicker from \"expo-image-picker\";\r\nimport * as Google from \"expo-google-app-auth\";\r\nimport AsyncStorage from \"@react-native-community/async-storage\";\r\nconst axios = require(\"axios\");\r\nimport Constants from \"expo-constants\";\r\nimport  styles from \"../styles/styles\";\r\n\r\nexport default class Homepage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      photoUrl: \"\",\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <View style={styles.container}>\r\n        <TouchableOpacity>\r\n          <Text\r\n            onPress={pickImage}\r\n            style={{\r\n              color: \"#002f6c\",\r\n            }}\r\n          >\r\n            kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk\r\n            {AsyncStorage.getItem(\"jwtToken\")}\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}