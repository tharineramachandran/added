{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Activants46\\\\Desktop\\\\added\\\\KhazanahMobileApp\\\\app\\\\screen\\\\LoginScreen.js\",\n    _this2 = this;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { baseURLAPI, baseURL } from \"../../Global\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { div } from \"react-native-web/dist/index\";\nimport { Icon } from \"react-native-web/dist/index\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport useColorScheme from \"react-native-web/dist/exports/useColorScheme\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport * as Google from \"expo-google-app-auth\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\n\nvar axios = require(\"axios\");\n\nimport Constants from \"expo-constants\";\nimport styles from \"../styles/styles\";\nimport Homepage from \"./Homepage\";\n\nvar LoginScreen = function (_React$Component) {\n  _inherits(LoginScreen, _React$Component);\n\n  var _super = _createSuper(LoginScreen);\n\n  function LoginScreen(props) {\n    var _this;\n\n    _classCallCheck(this, LoginScreen);\n\n    _this = _super.call(this, props);\n\n    _this.setLogin = function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.setState({\n                signedIn: true\n              });\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      signedIn: false\n    };\n    return _this;\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 7\n        }\n      }, this.state.signedIn ? React.createElement(LoggedInPage, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }\n      }) : React.createElement(LoginPage, {\n        setLogin: this.setLogin,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }\n      }));\n    }\n  }]);\n\n  return LoginScreen;\n}(React.Component);\n\nexport { LoginScreen as default };\n\nvar LoginPage = function LoginPage(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      signupView = _useState2[0],\n      setsignupView = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setemailCredencials = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setpasswordCredencials = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      name = _useState8[0],\n      setnameCredencials = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      phone = _useState10[0],\n      setphoneCredencials = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      errorList = _useState12[0],\n      seterrorList = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      url = _useState14[0],\n      seturlCredencials = _useState14[1];\n\n  var _useState15 = useState(null),\n      _useState16 = _slicedToArray(_useState15, 2),\n      image = _useState16[0],\n      setImage = _useState16[1];\n\n  useEffect(function () {\n    (function _callee2() {\n      var _await$ImagePicker$re, status;\n\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(Platform.OS !== \"web\")) {\n                _context2.next = 6;\n                break;\n              }\n\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(ImagePicker.requestMediaLibraryPermissionsAsync());\n\n            case 3:\n              _await$ImagePicker$re = _context2.sent;\n              status = _await$ImagePicker$re.status;\n\n              if (status !== \"granted\") {\n                alert(\"Sorry, we need camera roll permissions to make this work!\");\n              }\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  var pickImage = function pickImage() {\n    var result;\n    return _regeneratorRuntime.async(function pickImage$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.Images,\n              allowsEditing: true,\n              base64: true,\n              aspect: [4, 4],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context3.sent;\n            console.log(result);\n            console.log(\"image asset\", result);\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n            }\n\n          case 6:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var viewSignUp = function viewSignUp() {\n    setsignupView(!signupView);\n  };\n\n  var signUpUser = function signUpUser(email, name, password, phone, image) {\n    var body;\n    return _regeneratorRuntime.async(function signUpUser$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            Keyboard.dismiss();\n\n            if (email && name && password && phone && image) {\n              body = {\n                TX_USER_NAME: name,\n                TX_USER_EMAIL: email,\n                TX_USER_PASSWORD: password,\n                TX_USER_PHONE: phone,\n                TX_USER_PICTURE: image\n              };\n              console.log(baseURLAPI);\n              axios.post(baseURLAPI + \"/auth/register\", body).then(function (response) {\n                if (response.data.jwtToken) {\n                  AsyncStorage.setItem(\"jwtToken\", response.data.jwtToken);\n                }\n              }).catch(function (error) {\n                console.log(error);\n              });\n            } else {\n              errormessage(\"Incomplete details\");\n            }\n\n          case 2:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var signInUser = function signInUser(email, password) {\n    var body;\n    return _regeneratorRuntime.async(function signInUser$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            Keyboard.dismiss();\n\n            if (email && password) {\n              body = {\n                TX_USER_NAME: email,\n                TX_USER_EMAIL: email,\n                TX_USER_PASSWORD: password\n              };\n              console.log(baseURLAPI);\n              axios.post(baseURLAPI + \"/auth/login\", body).then(function (response) {\n                if (response.data.jwtToken) {\n                  AsyncStorage.setItem(\"jwtToken\", response.data.jwtToken);\n                }\n              }).catch(function (error) {\n                errormessage(\"An error occured\");\n              });\n            } else {}\n\n          case 2:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var errormessage = function errormessage(message) {\n    seterrorList(message);\n  };\n\n  var signIn = function signIn() {\n    var result, user, body;\n    return _regeneratorRuntime.async(function signIn$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.prev = 0;\n            _context6.next = 3;\n            return _regeneratorRuntime.awrap(Google.logInAsync({\n              androidClientId: \"770480272379-786um8vmqi9p35ingldm4celsrk2jshi.apps.googleusercontent.com\",\n              iosClientId: \"770480272379-rlr3mcpthnr02t3rul9ls1u5p4k2bsm6.apps.googleusercontent.com\",\n              scopes: [\"profile\", \"email\"]\n            }));\n\n          case 3:\n            result = _context6.sent;\n\n            if (result.type === \"success\") {\n              console.log(result.user);\n              user = result.user;\n              body = {\n                TX_USER_NAME: user.name,\n                TX_USER_EMAIL: user.email,\n                TX_GOOGLE_ID: user.id,\n                TX_USER_PICTURE: user.photoUrl\n              };\n              console.log(baseURLAPI);\n              axios.post(baseURLAPI + \"/auth/socialauth\", body).then(function (response) {\n                if (response.data.jwtToken) {\n                  AsyncStorage.setItem(\"jwtToken\", response.data.jwtToken);\n                }\n              }).catch(function (error) {});\n            }\n\n            _context6.next = 11;\n            break;\n\n          case 7:\n            _context6.prev = 7;\n            _context6.t0 = _context6[\"catch\"](0);\n            console.log(\"error\", _context6.t0);\n            seterrorList(\"An error ocurred\");\n\n          case 11:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  return React.createElement(View, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 5\n    }\n  }, signupView ? React.createElement(View, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.header,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 11\n    }\n  }, \"Register\"), React.createElement(TouchableOpacity, {\n    style: {\n      alignContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 11\n    }\n  }, image ? React.createElement(TouchableOpacity, {\n    style: {\n      alignContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 15\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: image\n    },\n    style: {\n      width: 100,\n      height: 100,\n      borderRadius: 50\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    onPress: pickImage,\n    style: {\n      color: \"#002f6c\"\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 17\n    }\n  }, \"Change Image\")) : React.createElement(TouchableOpacity, {\n    onPress: pickImage,\n    style: {\n      borderColor: \"#27AE62\",\n      backgroundColor: \"#27AE62\",\n      alignContent: \"center\",\n      alignItems: \"center\",\n      backgroundColor: \"#27AE62\",\n      width: 100,\n      height: 100,\n      borderRadius: 50\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: {\n      paddingTop: 30,\n      paddingLeft: 10,\n      color: \"#fff\"\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 17\n    }\n  }, \"Add a profile picture\"))), React.createElement(TextInput, {\n    style: styles.TextInput,\n    onChangeText: function onChangeText(name) {\n      return setnameCredencials(name);\n    },\n    underlineColorAndroid: \"rgba(0,0,0,0)\",\n    placeholder: \"Name\",\n    placeholderTextColor: \"#002f6c\",\n    selectionColor: \"#fff\",\n    keyboardType: \"default\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 11\n    }\n  }), React.createElement(TextInput, {\n    style: styles.TextInput,\n    onChangeText: function onChangeText(email) {\n      return setemailCredencials(email);\n    },\n    underlineColorAndroid: \"rgba(0,0,0,0)\",\n    placeholder: \"Email\",\n    placeholderTextColor: \"#002f6c\",\n    selectionColor: \"#fff\",\n    keyboardType: \"email-address\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 11\n    }\n  }), React.createElement(TextInput, {\n    style: styles.TextInput,\n    onChangeText: function onChangeText(phone) {\n      return setphoneCredencials(phone);\n    },\n    underlineColorAndroid: \"rgba(0,0,0,0)\",\n    placeholder: \"Phone\",\n    placeholderTextColor: \"#002f6c\",\n    selectionColor: \"#fff\",\n    keyboardType: \"numeric\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 11\n    }\n  }), React.createElement(TextInput, {\n    style: styles.TextInput,\n    onChangeText: function onChangeText(password) {\n      return setpasswordCredencials(password);\n    },\n    underlineColorAndroid: \"rgba(0,0,0,0)\",\n    placeholder: \"Password\",\n    placeholderTextColor: \"#002f6c\",\n    selectionColor: \"#fff\",\n    secureTextEntry: true,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 11\n    }\n  }), errorList && React.createElement(TouchableOpacity, {\n    style: {\n      borderColor: \"#DC143C\",\n      backgroundColor: \"#DC143C\",\n      width: 250,\n      borderWidth: 2,\n      marginTop: 25,\n      alignContent: \"center\",\n      borderRadius: 23,\n      paddingVertical: 7,\n      alignItems: \"center\"\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#fff\"\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 15\n    }\n  }, errorList)), React.createElement(TouchableOpacity, {\n    onPress: signUpUser(email, name, password, phone, image),\n    style: styles.UserButton,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#fff\"\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 13\n    }\n  }, \"Register\")), React.createElement(TouchableOpacity, {\n    onPress: viewSignUp,\n    style: styles.text,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#002f6c\"\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 13\n    }\n  }, \"Sign-In\"))) : React.createElement(View, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.header,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 11\n    }\n  }, \"Login\"), React.createElement(TextInput, {\n    style: styles.TextInput,\n    onChangeText: function onChangeText(email) {\n      return setemailCredencials(email);\n    },\n    underlineColorAndroid: \"rgba(0,0,0,0)\",\n    placeholder: \"Email\",\n    placeholderTextColor: \"#002f6c\",\n    selectionColor: \"#fff\",\n    keyboardType: \"email-address\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 11\n    }\n  }), React.createElement(TextInput, {\n    style: styles.TextInput,\n    onChangeText: function onChangeText(password) {\n      return setpasswordCredencials(password);\n    },\n    underlineColorAndroid: \"rgba(0,0,0,0)\",\n    placeholder: \"Password\",\n    placeholderTextColor: \"#002f6c\",\n    selectionColor: \"#fff\",\n    secureTextEntry: true,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 11\n    }\n  }), errorList && React.createElement(TouchableOpacity, {\n    style: {\n      borderColor: \"#DC143C\",\n      backgroundColor: \"#DC143C\",\n      width: 250,\n      borderWidth: 2,\n      marginTop: 25,\n      alignContent: \"center\",\n      borderRadius: 23,\n      paddingVertical: 7,\n      alignItems: \"center\"\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#fff\"\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 15\n    }\n  }, errorList)), React.createElement(TouchableOpacity, {\n    onPress: signInUser(email, password),\n    style: styles.UserButton,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#fff\"\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 13\n    }\n  }, \"Login\")), React.createElement(TouchableOpacity, {\n    onPress: viewSignUp,\n    style: styles.text,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#000000\"\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 13\n    }\n  }, \"Not a user? Sign Up\")), React.createElement(TouchableOpacity, {\n    onPress: signIn(),\n    style: styles.googleButton,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#fff\"\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 13\n    }\n  }, \"Sign in with Google\"))));\n};\n\nvar LoggedInPage = function LoggedInPage() {\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 5\n    }\n  }, React.createElement(Homepage, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 7\n    }\n  }));\n};","map":{"version":3,"sources":["C:/Users/Activants46/Desktop/added/KhazanahMobileApp/app/screen/LoginScreen.js"],"names":["React","useState","useEffect","useContext","baseURLAPI","baseURL","div","Icon","ImagePicker","Google","AsyncStorage","axios","require","Constants","styles","Homepage","LoginScreen","props","setLogin","setState","signedIn","state","container","Component","LoginPage","signupView","setsignupView","email","setemailCredencials","password","setpasswordCredencials","name","setnameCredencials","phone","setphoneCredencials","errorList","seterrorList","url","seturlCredencials","image","setImage","Platform","OS","requestMediaLibraryPermissionsAsync","status","alert","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","base64","aspect","quality","result","console","log","cancelled","uri","viewSignUp","signUpUser","Keyboard","dismiss","body","TX_USER_NAME","TX_USER_EMAIL","TX_USER_PASSWORD","TX_USER_PHONE","TX_USER_PICTURE","post","then","response","data","jwtToken","setItem","catch","error","errormessage","signInUser","message","signIn","logInAsync","androidClientId","iosClientId","scopes","type","user","TX_GOOGLE_ID","id","photoUrl","header","alignContent","alignItems","width","height","borderRadius","color","borderColor","backgroundColor","paddingTop","paddingLeft","TextInput","borderWidth","marginTop","paddingVertical","UserButton","text","googleButton","LoggedInPage"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { baseURLAPI, baseURL } from \"../../Global\";\r\nimport {\r\n  Keyboard,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Image,\r\n  Platform,\r\n  Button,\r\n  div,\r\n  Icon,\r\n  TextInput,\r\n  useColorScheme,\r\n} from \"react-native\";\r\nimport * as ImagePicker from \"expo-image-picker\";\r\nimport * as Google from \"expo-google-app-auth\";\r\nimport AsyncStorage from \"@react-native-community/async-storage\";\r\nconst axios = require(\"axios\");\r\nimport Constants from \"expo-constants\";\r\nimport styles from \"../styles/styles\";\r\nimport Homepage from \"./Homepage\";\r\n\r\nexport default class LoginScreen extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      signedIn: false,\r\n      \r\n    };\r\n  }\r\n  setLogin = async () => {\r\n    this.setState({\r\n      signedIn: true,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <View style={styles.container}>\r\n        {this.state.signedIn ? (\r\n          <LoggedInPage />\r\n        ) : (\r\n          <LoginPage setLogin={this.setLogin} />\r\n        )}\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst LoginPage = (props) => {\r\n  const [signupView, setsignupView] = useState(false);\r\n  const [email, setemailCredencials] = useState(\"\");\r\n  const [password, setpasswordCredencials] = useState(\"\");\r\n\r\n  const [name, setnameCredencials] = useState(\"\");\r\n  const [phone, setphoneCredencials] = useState(\"\");\r\n  const [errorList, seterrorList] = useState(\"\");\r\n  const [url, seturlCredencials] = useState(\"\");\r\n  const [image, setImage] = useState(null);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (Platform.OS !== \"web\") {\r\n        const {\r\n          status,\r\n        } = await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n        if (status !== \"granted\") {\r\n          alert(\"Sorry, we need camera roll permissions to make this work!\");\r\n        }\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  const pickImage = async () => {\r\n    let result = await ImagePicker.launchImageLibraryAsync({\r\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n      allowsEditing: true,\r\n      base64: true,\r\n      aspect: [4, 4],\r\n      quality: 1,\r\n    });\r\n\r\n    console.log(result);\r\n    console.log(\"image asset\", result);\r\n    if (!result.cancelled) {\r\n      setImage(result.uri);\r\n    }\r\n  };\r\n\r\n  const viewSignUp = () => {\r\n    setsignupView(!signupView);\r\n  };\r\n\r\n  const signUpUser = async (email, name, password, phone, image) => {\r\n    Keyboard.dismiss();\r\n    if (email && name && password && phone && image) {\r\n      const body = {\r\n        TX_USER_NAME: name,\r\n        TX_USER_EMAIL: email,\r\n        TX_USER_PASSWORD: password,\r\n        TX_USER_PHONE: phone,\r\n        TX_USER_PICTURE: image,\r\n      };\r\n      console.log(baseURLAPI);\r\n\r\n      axios\r\n        .post(baseURLAPI + \"/auth/register\", body)\r\n        .then((response) => {\r\n          if (response.data.jwtToken) {\r\n            AsyncStorage.setItem(\"jwtToken\", response.data.jwtToken);\r\n            // props.setLogin();\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          // seterrorList(\"An error occured\");\r\n        });\r\n    } else {\r\n      errormessage(\"Incomplete details\");\r\n    }\r\n  };\r\n  const signInUser = async (email, password) => {\r\n    Keyboard.dismiss();\r\n    if (email && password) {\r\n      const body = {\r\n        TX_USER_NAME: email,\r\n        TX_USER_EMAIL: email,\r\n        TX_USER_PASSWORD: password,\r\n      };\r\n      console.log(baseURLAPI);\r\n      axios\r\n        .post(baseURLAPI + \"/auth/login\", body)\r\n        .then((response) => {\r\n          if (response.data.jwtToken) {\r\n            AsyncStorage.setItem(\"jwtToken\", response.data.jwtToken);\r\n            // props.setLogin();\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          errormessage(\"An error occured\");\r\n        });\r\n    } else {\r\n      \r\n    }\r\n  };\r\n  const errormessage =   (message) => { seterrorList(message); }\r\n  const signIn = async () => {\r\n    try {\r\n      const result = await Google.logInAsync({\r\n        androidClientId:\r\n          \"770480272379-786um8vmqi9p35ingldm4celsrk2jshi.apps.googleusercontent.com\",\r\n        iosClientId:\r\n          \"770480272379-rlr3mcpthnr02t3rul9ls1u5p4k2bsm6.apps.googleusercontent.com\",\r\n        scopes: [\"profile\", \"email\"],\r\n      });\r\n\r\n      if (result.type === \"success\") {\r\n        console.log(result.user);\r\n        var user = result.user;\r\n\r\n        const body = {\r\n          TX_USER_NAME: user.name,\r\n          TX_USER_EMAIL: user.email,\r\n          TX_GOOGLE_ID: user.id,\r\n          TX_USER_PICTURE: user.photoUrl,\r\n        };\r\n        console.log(baseURLAPI);\r\n        axios\r\n          .post(baseURLAPI + \"/auth/socialauth\", body)\r\n          .then((response) => {\r\n            if (response.data.jwtToken) {\r\n              AsyncStorage.setItem(\"jwtToken\", response.data.jwtToken);\r\n\r\n              // props.setLogin();\r\n            }\r\n          })\r\n          .catch((error) => {});\r\n      }\r\n    } catch (e) {\r\n      console.log(\"error\", e);\r\n      seterrorList(\"An error ocurred\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      {signupView ? (\r\n        <View>\r\n          <Text style={styles.header}>Register</Text>\r\n\r\n          <TouchableOpacity\r\n            style={{\r\n              alignContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            {image ? (\r\n              <TouchableOpacity\r\n                style={{\r\n                  alignContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                <Image\r\n                  source={{ uri: image }}\r\n                  style={{ width: 100, height: 100, borderRadius: 50 }}\r\n                />\r\n                <Text\r\n                  onPress={pickImage}\r\n                  style={{\r\n                    color: \"#002f6c\",\r\n                  }}\r\n                >\r\n                  Change Image\r\n                </Text>\r\n              </TouchableOpacity>\r\n            ) : (\r\n              <TouchableOpacity\r\n                onPress={pickImage}\r\n                style={{\r\n                  borderColor: \"#27AE62\",\r\n                  backgroundColor: \"#27AE62\",\r\n                  alignContent: \"center\",\r\n                  alignItems: \"center\",\r\n\r\n                  backgroundColor: \"#27AE62\",\r\n                  width: 100,\r\n                  height: 100,\r\n                  borderRadius: 50,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    paddingTop: 30,\r\n                    paddingLeft: 10,\r\n                    color: \"#fff\",\r\n                  }}\r\n                >\r\n                  Add a profile picture\r\n                </Text>\r\n              </TouchableOpacity>\r\n            )}\r\n          </TouchableOpacity>\r\n          <TextInput\r\n            style={styles.TextInput}\r\n            onChangeText={(name) => setnameCredencials(name)}\r\n            underlineColorAndroid=\"rgba(0,0,0,0)\"\r\n            placeholder=\"Name\"\r\n            placeholderTextColor=\"#002f6c\"\r\n            selectionColor=\"#fff\"\r\n            keyboardType=\"default\"\r\n          />\r\n\r\n          <TextInput\r\n            style={styles.TextInput}\r\n            onChangeText={(email) => setemailCredencials(email)}\r\n            underlineColorAndroid=\"rgba(0,0,0,0)\"\r\n            placeholder=\"Email\"\r\n            placeholderTextColor=\"#002f6c\"\r\n            selectionColor=\"#fff\"\r\n            keyboardType=\"email-address\"\r\n          />\r\n\r\n          <TextInput\r\n            style={styles.TextInput}\r\n            onChangeText={(phone) => setphoneCredencials(phone)}\r\n            underlineColorAndroid=\"rgba(0,0,0,0)\"\r\n            placeholder=\"Phone\"\r\n            placeholderTextColor=\"#002f6c\"\r\n            selectionColor=\"#fff\"\r\n            keyboardType=\"numeric\"\r\n          />\r\n\r\n          <TextInput\r\n            style={styles.TextInput}\r\n            onChangeText={(password) => setpasswordCredencials(password)}\r\n            underlineColorAndroid=\"rgba(0,0,0,0)\"\r\n            placeholder=\"Password\"\r\n            placeholderTextColor=\"#002f6c\"\r\n            selectionColor=\"#fff\"\r\n            secureTextEntry={true}\r\n          />\r\n          {errorList && (\r\n            <TouchableOpacity\r\n              style={{\r\n                borderColor: \"#DC143C\",\r\n                backgroundColor: \"#DC143C\",\r\n                width: 250,\r\n                borderWidth: 2,\r\n                marginTop: 25,\r\n                alignContent: \"center\",\r\n                borderRadius: 23,\r\n                paddingVertical: 7,\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <Text\r\n                style={{\r\n                  color: \"#fff\",\r\n                }}\r\n              >\r\n                {errorList}\r\n              </Text>\r\n            </TouchableOpacity>\r\n          )}\r\n\r\n          <TouchableOpacity\r\n            onPress={signUpUser(email, name, password, phone, image)}\r\n            style={styles.UserButton}\r\n          >\r\n            <Text\r\n              style={{\r\n                color: \"#fff\",\r\n              }}\r\n            >\r\n              Register\r\n            </Text>\r\n          </TouchableOpacity>\r\n\r\n          <TouchableOpacity onPress={viewSignUp} style={styles.text}>\r\n            <Text style={{ color: \"#002f6c\" }}>Sign-In</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      ) : (\r\n        <View>\r\n          <Text style={styles.header}>Login</Text>\r\n\r\n          <TextInput\r\n            style={styles.TextInput}\r\n            onChangeText={(email) => setemailCredencials(email)}\r\n            underlineColorAndroid=\"rgba(0,0,0,0)\"\r\n            placeholder=\"Email\"\r\n            placeholderTextColor=\"#002f6c\"\r\n            selectionColor=\"#fff\"\r\n            keyboardType=\"email-address\"\r\n          />\r\n\r\n          <TextInput\r\n            style={styles.TextInput}\r\n            onChangeText={(password) => setpasswordCredencials(password)}\r\n            underlineColorAndroid=\"rgba(0,0,0,0)\"\r\n            placeholder=\"Password\"\r\n            placeholderTextColor=\"#002f6c\"\r\n            selectionColor=\"#fff\"\r\n            secureTextEntry={true}\r\n          />\r\n\r\n          {errorList && (\r\n            <TouchableOpacity\r\n              style={{\r\n                borderColor: \"#DC143C\",\r\n                backgroundColor: \"#DC143C\",\r\n                width: 250,\r\n                borderWidth: 2,\r\n                marginTop: 25,\r\n                alignContent: \"center\",\r\n                borderRadius: 23,\r\n                paddingVertical: 7,\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <Text\r\n                style={{\r\n                  color: \"#fff\",\r\n                }}\r\n              >\r\n                {errorList}\r\n              </Text>\r\n            </TouchableOpacity>\r\n          )}\r\n\r\n          <TouchableOpacity\r\n            onPress={signInUser(email, password)}\r\n            style={styles.UserButton}\r\n          >\r\n            <Text style={{ color: \"#fff\" }}>Login</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity onPress={viewSignUp} style={styles.text}>\r\n            <Text\r\n              style={{\r\n                color: \"#000000\",\r\n              }}\r\n            >\r\n              Not a user? Sign Up\r\n            </Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity onPress={signIn()} style={styles.googleButton}>\r\n            <Text style={{ color: \"#fff\" }}>Sign in with Google</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst LoggedInPage = ( ) => {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Homepage />\r\n\r\n      {/* <Text style={styles.header}>Welcome:{props.name}</Text>\r\n      <Image style={styles.image} source={{ uri: props.photoUrl }} /> */}\r\n    </View>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}