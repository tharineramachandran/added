{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Activants46\\\\Desktop\\\\added\\\\KhazanahMobileApp\\\\App.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport LoginScreen from \"./app/screen/LoginScreen\";\nexport default function App() {\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, React.createElement(LoginScreen, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/Activants46/Desktop/added/KhazanahMobileApp/App.js"],"names":["StatusBar","React","LoginScreen","App","styles","container","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":";AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,OAAOC,WAAP;AACA,eAAe,SAASC,GAAT,GAAe;AAC5B,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD;AAED,IAAMD,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,SAAS,EAAE;AACTG,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React from 'react';\r\nimport { StyleSheet, Text, View } from 'react-native';\r\nimport LoginScreen from \"./app/screen/LoginScreen\"\r\nexport default function App() {\r\n  return (\r\n    <View style={styles.container}>\r\n      <LoginScreen />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n// import React, { useEffect, useState } from 'react';\r\n// import { AsyncStorage, Button, StyleSheet, Text, View } from 'react-native';\r\n// import * as AppAuth from 'expo-app-auth';\r\n\r\n// export default function App() {\r\n//   let [authState, setAuthState] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     (async () => {\r\n//       let cachedAuth = await getCachedAuthAsync();\r\n//       if (cachedAuth && !authState) {\r\n//         setAuthState(cachedAuth);\r\n//       }\r\n//     })();\r\n//   }, []);\r\n\r\n//   return (\r\n//     <View style={styles.container}>\r\n//       <Text>Expo AppAuth Example</Text>\r\n//       <Button\r\n//         title=\"Sign In with Google \"\r\n//         onPress={async () => {\r\n//           const _authState = await signInAsync();\r\n//           setAuthState(_authState);\r\n//         }}\r\n//       />\r\n//       <Button\r\n//         title=\"Sign Out \"\r\n//         onPress={async () => {\r\n//           await signOutAsync(authState);\r\n//           setAuthState(null);\r\n//         }}\r\n//       />\r\n//       <Text>{JSON.stringify(authState, null, 2)}</Text>\r\n//     </View>\r\n//   );\r\n// }\r\n\r\n// const styles = StyleSheet.create({\r\n//   container: {\r\n//     flex: 1,\r\n//     backgroundColor: '#fff',\r\n//     alignItems: 'center',\r\n//     justifyContent: 'center',\r\n//   },\r\n// });\r\n\r\n// let config = {\r\n//   issuer: 'https://accounts.google.com',\r\n//   scopes: ['openid', 'profile'],\r\n//   /* This is the CLIENT_ID generated from a Firebase project */\r\n//   clientId: '603386649315-vp4revvrcgrcjme51ebuhbkbspl048l9.apps.googleusercontent.com',\r\n// };\r\n\r\n// let StorageKey = '@MyApp:CustomGoogleOAuthKey';\r\n\r\n// export async function signInAsync() {\r\n//   let authState = await AppAuth.authAsync(config);\r\n//   await cacheAuthAsync(authState);\r\n//   console.log('signInAsync', authState);\r\n//   return authState;\r\n// }\r\n\r\n// async function cacheAuthAsync(authState) {\r\n//   return await AsyncStorage.setItem(StorageKey, JSON.stringify(authState));\r\n// }\r\n\r\n// export async function getCachedAuthAsync() {\r\n//   let value = await AsyncStorage.getItem(StorageKey);\r\n//   let authState = JSON.parse(value);\r\n//   console.log('getCachedAuthAsync', authState);\r\n//   if (authState) {\r\n//     if (checkIfTokenExpired(authState)) {\r\n//       return refreshAuthAsync(authState);\r\n//     } else {\r\n//       return authState;\r\n//     }\r\n//   }\r\n//   return null;\r\n// }\r\n\r\n// function checkIfTokenExpired({ accessTokenExpirationDate }) {\r\n//   return new Date(accessTokenExpirationDate) < new Date();\r\n// }\r\n\r\n// async function refreshAuthAsync({ refreshToken }) {\r\n//   let authState = await AppAuth.refreshAsync(config, refreshToken);\r\n//   console.log('refreshAuth', authState);\r\n//   await cacheAuthAsync(authState);\r\n//   return authState;\r\n// }\r\n\r\n// export async function signOutAsync({ accessToken }) {\r\n//   try {\r\n//     await AppAuth.revokeAsync(config, {\r\n//       token: accessToken,\r\n//       isClientIdProvided: true,\r\n//     });\r\n//     await AsyncStorage.removeItem(StorageKey);\r\n//     return null;\r\n//   } catch (e) {\r\n//     alert(`Failed to revoke token: ${e.message}`);\r\n//   }\r\n// }\r\n\r\n// import React from \"react\"\r\n// import { StyleSheet, Text, View, Image, Button } from \"react-native\"\r\n \r\n// import * as Google from 'expo-google-app-auth';\r\n\r\n\r\n\r\n// export default class App extends React.Component {\r\n//   constructor(props) {\r\n//     super(props)\r\n//     this.state = {\r\n//       signedIn: false,\r\n//       name: \"\",\r\n//       photoUrl: \"\"\r\n//     }\r\n//   }\r\n//   signIn = async () => {\r\n//     try {\r\n//       const result = await Google.logInAsync({\r\n//         androidClientId:\r\n//           \"770480272379-786um8vmqi9p35ingldm4celsrk2jshi.apps.googleusercontent.com\",\r\n//          iosClientId: \"770480272379-rlr3mcpthnr02t3rul9ls1u5p4k2bsm6.apps.googleusercontent.com\",  \r\n//         scopes: [\"profile\", \"email\"]\r\n//       })\r\n\r\n//       if (result.type === \"success\") {\r\n//         this.setState({\r\n//           signedIn: true,\r\n//           name: result.user.name,\r\n//           photoUrl: result.user.photoUrl\r\n//         })\r\n//       } else {\r\n//         console.log(\"cancelled\")\r\n//       }\r\n//     } catch (e) {\r\n//       console.log(\"error\", e)\r\n//     }\r\n//   }\r\n//   render() {\r\n//     return (\r\n//       <View style={styles.container}>\r\n//         {this.state.signedIn ? (\r\n//           <LoggedInPage name={this.state.name} photoUrl={this.state.photoUrl} />\r\n//         ) : (\r\n//           <LoginPage signIn={this.signIn} />\r\n//         )}\r\n//       </View>\r\n//     )\r\n//   }\r\n// }\r\n\r\n// const LoginPage = props => {\r\n//   return (\r\n//     <View>\r\n//       <Text style={styles.header}>Sign In With Google</Text>\r\n//       <Button title=\"Sign in with Google\" onPress={() => props.signIn()} />\r\n//     </View>\r\n//   )\r\n// }\r\n\r\n// const LoggedInPage = props => {\r\n//   return (\r\n//     <View style={styles.container}>\r\n//       <Text style={styles.header}>Welcome:{props.name}</Text>\r\n//       <Image style={styles.image} source={{ uri: props.photoUrl }} />\r\n//     </View>\r\n//   )\r\n// }\r\n\r\n// const styles = StyleSheet.create({\r\n//   container: {\r\n//     flex: 1,\r\n//     backgroundColor: \"#fff\",\r\n//     alignItems: \"center\",\r\n//     justifyContent: \"center\"\r\n//   },\r\n//   header: {\r\n//     fontSize: 25\r\n//   },\r\n//   image: {\r\n//     marginTop: 15,\r\n//     width: 150,\r\n//     height: 150,\r\n//     borderColor: \"rgba(0,0,0,0.2)\",\r\n//     borderWidth: 3,\r\n//     borderRadius: 150\r\n//   }\r\n// })"]},"metadata":{},"sourceType":"module"}